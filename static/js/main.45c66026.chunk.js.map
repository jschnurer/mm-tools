{"version":3,"sources":["media/mm7/barrows.png","media/icons/backup.svg","media/icons/magnifying-glass.svg","media/icons/hamburger-menu.svg","media/icons/teacher.svg","media/icons/treasure-map.svg","media/icons/help.svg","media/icons/potion-ball.svg","components/identifier/ItemTypes.ts","components/layout/PageTitle.tsx","components/layout/PageLayout.tsx","components/parties/RandomParty.tsx","NotFound.tsx","components/About.tsx","components/mm-trainers/Trainers.tsx","components/maps/Maps.tsx","components/identifier/Identifier.tsx","Routing.tsx","components/identifier/MM3Id.tsx","components/identifier/MMXeenId.tsx","components/identifier/MM2Id.tsx","components/identifier/MM1Id.tsx","components/identifier/GamePicker.tsx","components/alchemy/Potion.tsx","components/alchemy/Alchemy.tsx","components/layout/MenuItem.tsx","components/layout/MainMenu.tsx","components/layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ItemTypes","PageTitle","title","useEffect","document","className","PageLayout","children","header","footer","MMGames","availableRaces","availableClasses","MM10ClassesByRace","partySizes","RandomParty","useState","game","partyMembers","state","setState","map","key","onClick","classKey","raceKey","races","partySize","i","race","Math","floor","random","length","classes","push","character","generateParty","mem","ix","NotFound","About","href","games","skillLevels","Trainers","setGame","category","setCategory","skill","setSkill","trainers","skillTrainers","mm2","mm3","mm6","mm7","mm8","categories","Set","t","sort","a","b","skills","filter","filteredTrainers","aLvl","indexOf","level","bLvl","location","name","gm","changeGame","cat","changeCategory","sk","trainer","undefined","note","Maps","src","mm7BarrowMap","alt","Routes","Identifier","weapons","armor","handheldItems","miscItems","mods","specialItems","otherItems","imbues","mm1Items","searchExact","searchTerm","setSearchTerm","items","setItems","searchBoxRef","useRef","current","focus","setSpecialItem","item","appendItem","purpose","findItem","search","special","find","x","toUpperCase","Special","weapon","Weapon","armorItem","Armor","handheldItem","Handheld","miscItem","Misc","otherItem","Other","mm1Item","MM1Item","findAllMods","property","findAllImbues","suffix","setWeapon","dmgBonus","forEach","mod","damage","toHit","toHitString","toString","allOthers","getOthersString","spells","getCastsString","bonus","useAbility","dmg","parseInt","setOther","totalAC","acBonus","ac","classesString","acString","setMM1Item","amt","magic","cost","acDmg","other","join","spell","onSubmit","e","preventDefault","trim","term","result","type","replace","select","doSearch","placeholder","value","onChange","target","ref","split","line","MM3Id","weaponData","armorData","handheldItemData","imbuedData","miscData","modsData","specialItemData","rel","MMXeenId","MM2Id","MM1Id","GamePicker","props","match","params","to","ItemIdentifierForGame","Potion","potion","recipe","effect","recipes","isTop","components","pot","r","comp","substr","renderComps","arr","gameRecipes","mm6Recipes","mm7Recipes","mm8Recipes","Alchemy","potionType","setPotionType","potionName","setPotionName","showSimplified","setShowSimplified","potionTypes","Object","keys","pt","checked","getSimpleComponents","list","color","chunks","chunk0","chunk1","Routing","path","exact","component","ItemIdentifier","SkillTrainers","Root","MenuItem","label","icon","url","isCollapsed","matchExact","useRouteMatch","MainMenu","setIsCollapsed","hamburgerMenuIcon","backupIcon","teacherIcon","mapIcon","magnifyingGlassIcon","potionIcon","helpIcon","Layout","App","basename","process","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45c66026.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/barrows.ae4696d4.png\";","module.exports = __webpack_public_path__ + \"static/media/backup.668d563a.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.ab6f39ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger-menu.6a56a4aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/teacher.7ef056f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/treasure-map.75c4582a.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.d72eb3c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/potion-ball.4c5508b8.svg\";","export interface IWeapon {\r\n  name: string;\r\n  classes: string;\r\n  hands: string;\r\n  damage: string;\r\n  bonus?: string;\r\n  useAbility?: string;\r\n}\r\n\r\nexport interface IArmor {\r\n  name: string;\r\n  classes: string;\r\n  acBonus: number;\r\n  bonus?: string;\r\n  useAbility?: string;\r\n}\r\n\r\nexport interface IHandheldItem {\r\n  name: string;\r\n  classes: string;\r\n  acBonus: number;\r\n}\r\n\r\nexport interface IImbue {\r\n  suffix: string;\r\n  spell: string;\r\n}\r\n\r\nexport interface IMiscItem {\r\n  name: string;\r\n  type: string;\r\n  acBonus: number;\r\n}\r\n\r\nexport interface IOtherItem {\r\n  name: string;\r\n  classes: string;\r\n  bonus: string;\r\n  useAbility: string;\r\n  acBonus: undefined;\r\n}\r\n\r\nexport interface IMod {\r\n  property: string;\r\n  toHit: string | number;\r\n  damage: string | number;\r\n  ac: string | number;\r\n  other: string;\r\n}\r\n\r\nexport interface ISpecialItem {\r\n  name: string;\r\n  purpose: string;\r\n  location: string;\r\n}\r\n\r\nexport interface IMM1Item {\r\n  name: string;\r\n  classes: string;\r\n  special: string;\r\n  amt: number;\r\n  magic: string;\r\n  cost: number;\r\n  dmg: number;\r\n  acDmg: number;\r\n}\r\n\r\nexport type IItem =\r\n  IWeapon\r\n  | IArmor\r\n  | IHandheldItem\r\n  | IMiscItem\r\n  | ISpecialItem\r\n  | IOtherItem\r\n  | IMM1Item;\r\n\r\nexport enum ItemTypes {\r\n  Weapon,\r\n  Armor,\r\n  Handheld,\r\n  Misc,\r\n  Special,\r\n  Other,\r\n  MM1Item,\r\n}","import React, { useEffect } from 'react';\r\n\r\ninterface IPageTitleProps {\r\n  title: string,\r\n}\r\n\r\nconst PageTitle: React.FC<IPageTitleProps> = ({ title }) => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  return (\r\n    <h2 className=\"page-title\">\r\n      {title}\r\n    </h2>\r\n  )\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport \"./PageLayout.scoped.scss\";\r\n\r\ninterface IPageLayoutProps {\r\n  header?: JSX.Element;\r\n  footer?: JSX.Element;\r\n}\r\n\r\nconst PageLayout: React.FC<IPageLayoutProps> = ({ children, header, footer }) =>\r\n  <div className=\"page-layout\">\r\n    {header &&\r\n      <div className=\"page-header\">\r\n        {header}\r\n      </div>\r\n    }\r\n    <div className=\"page-body\">\r\n      {children}\r\n    </div>\r\n    {footer &&\r\n      <div className=\"page-footer\">\r\n        {footer}\r\n      </div>\r\n    }\r\n  </div>;\r\n\r\nexport default PageLayout;\r\n","import React, { useState } from \"react\";\r\nimport PageTitle from \"../layout/PageTitle\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\n\r\nconst MMGames = [\r\n  \"MM1\",\r\n  \"MM2\",\r\n  \"MM3\",\r\n  \"MM4/5\",\r\n  \"MM6\",\r\n  \"MM7\",\r\n  \"MM8\",\r\n  \"MM9\",\r\n  \"MM10\",\r\n];\r\n\r\ninterface IGameIndexable {\r\n  [index: string]: string[];\r\n};\r\n\r\nconst availableRaces: IGameIndexable = {\r\n  \"MM3\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Gnome\",\r\n    \"Half-Orc\",\r\n  ],\r\n  \"MM7\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Goblin\",\r\n  ],\r\n  \"MM9\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Half-Orc\",\r\n  ],\r\n  \"MM10\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Orc\",\r\n  ],\r\n};\r\n\r\nconst availableClasses: IGameIndexable = {\r\n  \"MM1\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Robber\",\r\n  ],\r\n  \"MM2\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Robber\",\r\n    \"Ninja\",\r\n    \"Barbarian\",\r\n  ],\r\n  \"MM3\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Robber\",\r\n    \"Ninja\",\r\n    \"Barbarian\",\r\n    \"Druid\",\r\n    \"Ranger\",\r\n  ],\r\n  \"MM6\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Druid\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n  ],\r\n  \"MM7\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Druid\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Monk\",\r\n    \"Ranger\",\r\n    \"Thief\",\r\n  ],\r\n  \"MM8\": [\r\n    \"Cleric\",\r\n    \"Dark Elf\",\r\n    \"Knight\",\r\n    \"Minotaur\",\r\n    \"Necromancer\",\r\n    \"Troll\",\r\n    \"Vampire\",\r\n  ],\r\n  \"MM9\": [\r\n    \"Fighter -> Mercenary -> Gladiator\",\r\n    \"Fighter -> Mercenary -> Assassin\",\r\n    \"Fighter -> Crusader -> Ranger\",\r\n    \"Fighter -> Crusader -> Paladin\",\r\n    \"Initiate -> Scholar -> Mage\",\r\n    \"Initiate -> Scholar -> Lich\",\r\n    \"Initiative -> Healer -> Priest\",\r\n    \"Initiative -> Healer -> Druid\",\r\n  ],\r\n};\r\n\r\nconst MM10ClassesByRace: IGameIndexable = {\r\n  \"Human\": [\r\n    \"Mercenary\",\r\n    \"Crusader\",\r\n    \"Freemage\",\r\n  ],\r\n  \"Elf\": [\r\n    \"Bladedancer\",\r\n    \"Ranger\",\r\n    \"Druid\",\r\n  ],\r\n  \"Dwarf\": [\r\n    \"Defender\",\r\n    \"Scout\",\r\n    \"Runepriest\",\r\n  ],\r\n  \"Orc\": [\r\n    \"Barbarian\",\r\n    \"Hunter\",\r\n    \"Shaman\",\r\n  ],\r\n};\r\n\r\ninterface IPartySizes {\r\n  [index: string]: number;\r\n};\r\n\r\nconst partySizes: IPartySizes = {\r\n  \"MM1\": 6,\r\n  \"MM2\": 6,\r\n  \"MM3\": 6,\r\n  \"MM4/5\": 6,\r\n  \"MM6\": 4,\r\n  \"MM7\": 4,\r\n  \"MM8\": 1,\r\n  \"MM9\": 4,\r\n  \"MM10\": 4,\r\n}\r\n\r\ninterface IRandomPartyState {\r\n  game: string,\r\n  partyMembers: string[],\r\n}\r\n\r\nconst RandomParty: React.FC = () => {\r\n  const [state, setState] = useState<IRandomPartyState>({\r\n    game: \"\",\r\n    partyMembers: [],\r\n  });\r\n\r\n  const generateParty = (game: string) => {\r\n    let classKey = game;\r\n    let raceKey = game;\r\n    if (game === \"MM4/5\") {\r\n      classKey = \"MM3\";\r\n    }\r\n    if (game === \"MM1\"\r\n      || game === \"MM2\"\r\n      || game === \"MM4/5\") {\r\n      raceKey = \"MM3\";\r\n    }\r\n\r\n    let partyMembers: string[] = [];\r\n    const races: string[] | undefined = availableRaces[raceKey];\r\n    const partySize = partySizes[game];\r\n\r\n    if (game === \"MM10\") {\r\n      for (let i = 0; i < partySize; i++) {\r\n        const race = races[Math.floor(Math.random() * races.length)];\r\n        const classes = MM10ClassesByRace[race];\r\n\r\n        partyMembers.push(`${classes[Math.floor(Math.random() * classes.length)]} (${race})`);\r\n      }\r\n    } else {\r\n      const classes = availableClasses[classKey];\r\n\r\n      for (let i = 0; i < partySize; i++) {\r\n        let character = classes[Math.floor(Math.random() * classes.length)];\r\n\r\n        if (races) {\r\n          character += ` (${races[Math.floor(Math.random() * races.length)]})`;\r\n        }\r\n\r\n        partyMembers.push(character);\r\n      }\r\n    }\r\n\r\n    setState({\r\n      game,\r\n      partyMembers,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title=\"Random Party\" />\r\n          <div>\r\n            <p>\r\n              Click a button to generate a random party for that game.\r\n            </p>\r\n            {MMGames.map(game => (\r\n              <button\r\n                key={game}\r\n                onClick={() => generateParty(game)}\r\n                className=\"primary-button\"\r\n              >\r\n                {game}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    >\r\n      {state.partyMembers.length > 0 &&\r\n        <div>\r\n          <h4>Random {state.game} Party</h4>\r\n          <ol>\r\n            {state.partyMembers.map((mem, ix) =>\r\n              <li\r\n                key={ix}\r\n              >\r\n                {mem}\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      }\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default RandomParty;","import React from 'react';\r\nimport PageTitle from 'components/layout/PageTitle';\r\n\r\nconst NotFound: React.FC = () =>\r\n  <>\r\n    <PageTitle title=\"Whoopsie\" />\r\n    <p>Doesn't look like there's anything here.</p>\r\n  </>;\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport PageTitle from \"./layout/PageTitle\";\r\n\r\nconst About: React.FC = () =>\r\n  <>\r\n    <PageTitle title=\"Might and Magic Tools\" />\r\n    <p>\r\n      Welcome to Might and Magic Tools. Here you'll\r\n      find some tools and info to help you play the games.\r\n    </p>\r\n    <p>\r\n      Have an idea or a request?\r\n      Email me: enigmabrand &lt;at&gt; gmail.\r\n    </p>\r\n    <p>\r\n      The source code for this webapp is <a href=\"https://github.com/jschnurer/mm-tools\">available on github</a>.\r\n    </p>\r\n  </>;\r\n\r\nexport default About;","import React, { useState } from \"react\";\r\nimport skillTrainers from \"./skill-trainers.json\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./Trainers.scoped.scss\";\r\n\r\ninterface ISkillTrainer {\r\n  category: string;\r\n  level: string;\r\n  skill: string;\r\n  name: string;\r\n  location: string;\r\n  note?: string;\r\n}\r\n\r\nconst games = [\"MM2\", \"MM3\", \"MM4/5\", \"MM6\", \"MM7\", \"MM8\"];\r\nconst skillLevels = [\"Normal\", \"Expert\", \"Master\", \"Grandmaster\"];\r\n\r\nconst Trainers: React.FC = () => {\r\n  const [game, setGame] = useState(\"MM6\");\r\n  const [category, setCategory] = useState(\"*\");\r\n  const [skill, setSkill] = useState(\"*\");\r\n\r\n  let trainers: ISkillTrainer[] = [];\r\n\r\n  if (game === \"MM2\") {\r\n    trainers = skillTrainers.mm2;\r\n  } else if (game === \"MM3\") {\r\n    trainers = skillTrainers.mm3;\r\n  } else if (game === \"MM4/5\") {\r\n    trainers = skillTrainers[\"mm4/5\"];\r\n  } else if (game === \"MM6\") {\r\n    trainers = skillTrainers.mm6;\r\n  } else if (game === \"MM7\") {\r\n    trainers = skillTrainers.mm7;\r\n  } else if (game === \"MM8\") {\r\n    trainers = skillTrainers.mm8;\r\n  }\r\n\r\n  const categories = [\"*\",\r\n    ...new Set(trainers\r\n      .map(t => t.category))]\r\n    .sort((a, b) => a < b ? -1 : 1);\r\n\r\n  const skills = [\"*\",\r\n    ...new Set(trainers\r\n      .filter(t => t.category === category\r\n        || category === \"*\")\r\n      .map(t => t.skill))]\r\n    .sort((a, b) => a < b ? -1 : 1);\r\n\r\n  const filteredTrainers = trainers\r\n    .filter(t => (t.category === category\r\n      || category === \"*\"\r\n    )\r\n      && (skill === \"*\"\r\n        || t.skill === skill))\r\n    .sort((a, b) => {\r\n      if (a.skill < b.skill) {\r\n        return -1;\r\n      } else if (a.skill > b.skill) {\r\n        return 1;\r\n      }\r\n\r\n      const aLvl = skillLevels.indexOf(a.level);\r\n      const bLvl = skillLevels.indexOf(b.level);\r\n\r\n      if (aLvl < bLvl) {\r\n        return -1;\r\n      } else if (aLvl > bLvl) {\r\n        return 1;\r\n      }\r\n\r\n      if (a.location < b.location) {\r\n        return -1;\r\n      } else if (a.location > b.location) {\r\n        return 1;\r\n      }\r\n\r\n      return a.name < b.name\r\n        ? -1\r\n        : 1;\r\n    });\r\n\r\n  const changeGame = (game: string) => {\r\n    setGame(game);\r\n    setSkill(\"*\");\r\n  }\r\n\r\n  const changeCategory = (cat: string) => {\r\n    setCategory(cat);\r\n    setSkill(\"*\");\r\n  }\r\n\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <div className=\"controls\">\r\n          <PageTitle title={`${game} Skill Trainers`} />\r\n          <div>\r\n            <label>\r\n              Game:\r\n            </label>\r\n            {games.map(gm => (\r\n              <button\r\n                className={`primary-button ${gm === game ? \"active\" : \"\"}`}\r\n                key={gm}\r\n                onClick={() => changeGame(gm)}\r\n              >\r\n                {gm}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Categories:\r\n            </label>\r\n            {categories.map(cat => (\r\n              <button\r\n                className={`primary-button ${cat === category ? \"active\" : \"\"}`}\r\n                key={cat}\r\n                onClick={() => changeCategory(cat)}\r\n              >\r\n                {cat}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Skill:\r\n            </label>\r\n            {skills.map(sk => (\r\n              <button\r\n                className={`primary-button ${sk === skill ? \"active\" : \"\"}`}\r\n                key={sk}\r\n                onClick={() => setSkill(sk)}\r\n              >\r\n                {sk}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    >\r\n      {filteredTrainers.map(trainer => (\r\n        <p\r\n          className=\"trainer\"\r\n          key={trainer.skill + trainer.level + trainer.name}\r\n        >\r\n          <label>\r\n            {trainer.skill} {trainer.level}\r\n          </label>\r\n          {trainer.location}{trainer.name\r\n            ? <>, {trainer.name}</>\r\n            : undefined\r\n          }\r\n          {trainer.note &&\r\n            <span\r\n              className=\"note\"\r\n            >\r\n              {trainer.note}\r\n            </span>\r\n          }\r\n        </p>\r\n      ))}\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default Trainers;","import React from \"react\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport mm7BarrowMap from \"media/mm7/barrows.png\"\r\nimport \"./Maps.scoped.scss\";\r\n\r\nconst Maps: React.FC = () => {\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title=\"Maps\" />\r\n        </>\r\n      )}\r\n    >\r\n      <h2>MM7 Barrows Map</h2>\r\n      <img\r\n        src={mm7BarrowMap}\r\n        alt=\"MM7 Barrows Map\"\r\n      />\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default Maps;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./Identifier.scoped.scss\";\r\nimport {\r\n  ISpecialItem,\r\n  IWeapon,\r\n  IArmor,\r\n  IHandheldItem,\r\n  IMiscItem,\r\n  IItem,\r\n  ItemTypes,\r\n  IMod,\r\n  IImbue,\r\n  IOtherItem,\r\n  IMM1Item,\r\n} from \"./ItemTypes\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\n\r\ninterface IIdentifierProps {\r\n  weapons: IWeapon[],\r\n  armor: IArmor[],\r\n  handheldItems: IHandheldItem[],\r\n  miscItems: IMiscItem[],\r\n  mods: IMod[],\r\n  specialItems: ISpecialItem[],\r\n  imbues: IImbue[],\r\n  otherItems?: IOtherItem[],\r\n  mm1Items?: IMM1Item[],\r\n  game: string,\r\n  searchExact?: boolean,\r\n  note?: JSX.Element,\r\n}\r\n\r\nconst Identifier: React.FC<IIdentifierProps> = ({\r\n  weapons,\r\n  armor,\r\n  handheldItems,\r\n  miscItems,\r\n  mods,\r\n  specialItems,\r\n  otherItems,\r\n  imbues,\r\n  mm1Items,\r\n  game,\r\n  searchExact,\r\n  note,\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [items, setItems] = useState<string[]>([]);\r\n  const searchBoxRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    searchBoxRef.current?.focus();\r\n  }, [searchBoxRef]);\r\n\r\n  const doSearch = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!searchTerm.trim()) {\r\n      return;\r\n    }\r\n\r\n    let term = searchTerm.toUpperCase();\r\n\r\n    const result = findItem(term);\r\n\r\n    if (!result) {\r\n      searchBoxRef.current?.select();\r\n      return;\r\n    }\r\n\r\n    const [item, type] = result;\r\n\r\n    if (type === ItemTypes.Special) {\r\n      setSpecialItem(item as ISpecialItem);\r\n      return;\r\n    } else {\r\n      term = term.replace(item.name.toUpperCase(), \"\");\r\n    }\r\n\r\n    const mods = findAllMods(term);\r\n    const imbues = findAllImbues(term);\r\n\r\n    if (type === ItemTypes.Weapon) {\r\n      setWeapon(item as IWeapon, mods, imbues);\r\n    } else if (type === ItemTypes.Armor) {\r\n      setOther(item as IArmor, mods, imbues);\r\n    } else if (type === ItemTypes.Handheld) {\r\n      setOther(item as IHandheldItem, mods, imbues);\r\n    } else if (type === ItemTypes.Misc) {\r\n      setOther(item as IMiscItem, mods, imbues);\r\n    } else if (type === ItemTypes.Other) {\r\n      setOther(item as IOtherItem, mods, imbues);\r\n    } else if (type === ItemTypes.MM1Item) {\r\n      setMM1Item(item as IMM1Item);\r\n    }\r\n\r\n    searchBoxRef.current?.select();\r\n  }\r\n\r\n  const setSpecialItem = (item: ISpecialItem) => {\r\n    appendItem(`${item.name}\r\n    Purpose: ${item.purpose}\r\n    Location: ${item.location}`);\r\n  }\r\n\r\n  const findItem = (search: string): [IItem, ItemTypes] | undefined => {\r\n    let special = specialItems.find(x => x.name.toUpperCase() === search);\r\n    if (special) {\r\n      return [special, ItemTypes.Special];\r\n    }\r\n    let weapon = weapons.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (weapon) {\r\n      return [weapon, ItemTypes.Weapon];\r\n    }\r\n    let armorItem = armor.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (armorItem) {\r\n      return [armorItem, ItemTypes.Armor];\r\n    }\r\n    let handheldItem = handheldItems.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (handheldItem) {\r\n      return [handheldItem, ItemTypes.Handheld];\r\n    }\r\n    let miscItem = miscItems.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (miscItem) {\r\n      return [miscItem, ItemTypes.Misc];\r\n    }\r\n    let otherItem = otherItems?.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (otherItem) {\r\n      return [otherItem, ItemTypes.Other];\r\n    }\r\n    let mm1Item = mm1Items?.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (mm1Item) {\r\n      return [mm1Item, ItemTypes.MM1Item];\r\n    }\r\n  }\r\n\r\n  const findAllMods = (search: string): IMod[] => {\r\n    return mods.filter(x => search.indexOf(x.property.toUpperCase()) > -1);\r\n  }\r\n\r\n  const findAllImbues = (search: string): IImbue[] => {\r\n    return imbues.filter(x => search.indexOf(x.suffix.toUpperCase()) > -1);\r\n  }\r\n\r\n  const appendItem = (item: string) => {\r\n    setItems([\r\n      item,\r\n      ...items,\r\n    ]);\r\n  }\r\n\r\n  const setWeapon = (weapon: IWeapon, mods: IMod[], imbues: IImbue[]) => {\r\n    let dmgBonus = \"\";\r\n    mods.forEach(mod => {\r\n      if (!mod.damage\r\n        || mod.damage === \"none\") {\r\n        return;\r\n      }\r\n\r\n      if (typeof mod.damage === \"number\"\r\n        && mod.damage as number > 0) {\r\n        dmgBonus += ` +${mod.damage}`;\r\n      } else {\r\n        dmgBonus += ` ${mod.damage}`;\r\n      }\r\n    });\r\n\r\n    let toHit = 0;\r\n    mods.forEach(mod => {\r\n      if (mod.toHit !== \"none\") {\r\n        toHit += mod.toHit as number;\r\n      }\r\n    });\r\n\r\n    let toHitString = \"\";\r\n\r\n    if (toHit < 0) {\r\n      toHitString = toHit.toString();\r\n    } else if (toHit > 0) {\r\n      toHitString = `+${toHit}`;\r\n    }\r\n\r\n    if (toHitString) {\r\n      toHitString = ` [${toHitString} to hit]`;\r\n    }\r\n\r\n    let allOthers = getOthersString(mods);\r\n    let spells = getCastsString(imbues);\r\n\r\n    if (weapon.bonus\r\n      && (weapon.bonus !== \"None\")) {\r\n      allOthers = allOthers\r\n        ? \", \" + weapon.bonus\r\n        : weapon.bonus || \"\";\r\n    }\r\n\r\n    if (weapon.useAbility\r\n      && weapon.useAbility !== \"None\") {\r\n      spells = spells\r\n        ? \", \" + weapon.bonus\r\n        : \"Casts: \" + weapon.bonus;\r\n    }\r\n\r\n    let dmg = weapon.damage;\r\n\r\n    if (parseInt(dmg, 10) + \"\" === dmg) {\r\n      dmg += \" max damage\";\r\n    }\r\n\r\n    appendItem(`${searchTerm} (${dmg}${dmgBonus})${toHitString} {${weapon.classes}}`\r\n      + (allOthers\r\n        ? `\\n${allOthers}`\r\n        : \"\")\r\n      + (spells\r\n        ? `\\n${spells}`\r\n        : \"\"));\r\n  }\r\n\r\n  const setOther = (item: IArmor | IHandheldItem | IMiscItem | IOtherItem, mods: IMod[], imbues: IImbue[]) => {\r\n    let totalAC = item.acBonus;\r\n    if (totalAC !== undefined) {\r\n      mods\r\n        .filter(mod => typeof mod.ac === \"number\")\r\n        .forEach(mod => {\r\n          if (totalAC !== undefined) {\r\n            totalAC += mod.ac as number;\r\n          }\r\n        });\r\n    }\r\n\r\n    let allOthers = getOthersString(mods);\r\n    let spells = getCastsString(imbues);\r\n    let classesString = (item as any).classes\r\n      ? ` {${(item as any).classes}}`\r\n      : \"\";\r\n\r\n    if ((item as IArmor).bonus\r\n      && (item as IArmor).bonus !== \"None\"\r\n      && (item as IArmor).bonus !== \"No Equip\") {\r\n      allOthers = allOthers\r\n        ? \", \" + (item as IArmor).bonus\r\n        : (item as IArmor).bonus || \"\";\r\n    }\r\n\r\n    if ((item as IArmor).useAbility\r\n      && (item as IArmor).useAbility !== \"N/A\"\r\n      && (item as IArmor).useAbility !== \"None\") {\r\n      spells = spells\r\n        ? \", \" + (item as IArmor).useAbility\r\n        : \"Casts: \" + (item as IArmor).useAbility;\r\n    }\r\n\r\n    let acString = totalAC !== undefined\r\n      ? ` (AC: ${totalAC})`\r\n      : '';\r\n\r\n    appendItem(`${searchTerm}${acString}${classesString}`\r\n      + (allOthers\r\n        ? `\\n${allOthers}`\r\n        : \"\")\r\n      + (spells\r\n        ? `\\n${spells}`\r\n        : \"\"));\r\n  }\r\n\r\n  const setMM1Item = (item: IMM1Item) => {\r\n    appendItem(`${item.name} {${item.classes}}\r\n      SPECIAL: ${item.special}\r\n      AMT: ${item.amt}\r\n      MAGIC: ${item.magic}\r\n      COST: ${item.cost}\r\n      DMG: ${item.dmg}\r\n      AC/DMG: ${item.acDmg}\r\n    `);\r\n  }\r\n\r\n  const getOthersString = (mods: IMod[]) => {\r\n    return mods\r\n      .filter(mod => !!mod.other\r\n        && mod.other !== \"none\")\r\n      .map(mod => mod.other)\r\n      .join(', ');\r\n  }\r\n\r\n  const getCastsString = (imbues: IImbue[]) => {\r\n    let spells = imbues\r\n      .map(x => x.spell)\r\n      .join(', ');\r\n\r\n    if (!!spells) {\r\n      spells = `Casts: ${spells}`;\r\n    }\r\n\r\n    return spells;\r\n  }\r\n\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title={`M&M ${game} Item Identifier`} />\r\n          <form\r\n            onSubmit={(e) => doSearch(e)}\r\n          >\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by full item name...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                ref={searchBoxRef}\r\n              />\r\n              <button\r\n                className=\"primary-button\"\r\n                type=\"submit\"\r\n              >\r\n                Id\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <span>K = Knight</span>\r\n              <span>P = Paladin</span>\r\n              <span>A = Archer</span>\r\n              <span>C = Cleric</span>\r\n              <span>S = Sorcerer</span>\r\n              <span>T = Robber</span>\r\n              <span>N = Ninja</span>\r\n              <span>B = Barbarian</span>\r\n              <span>D = Druid</span>\r\n              <span>R = Ranger</span>\r\n              <span>E = Evil</span>\r\n              <span>G = Good</span>\r\n              <span>EG = +Neutral</span>\r\n            </div>\r\n          </form>\r\n          {note}\r\n        </>\r\n      )}\r\n    >\r\n      {items &&\r\n        items.map((item, ix) =>\r\n          <p\r\n            key={ix}\r\n            className=\"item-description\"\r\n          >\r\n            {item.split('\\n').map((line, ix) =>\r\n              <span key={ix}>{line}</span>\r\n            )}\r\n          </p>\r\n        )\r\n      }\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default Identifier;","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport RandomParty from \"./components/parties/RandomParty\";\r\nimport NotFound from \"./NotFound\";\r\nimport About from \"./components/About\";\r\nimport Trainers from \"components/mm-trainers/Trainers\";\r\nimport Maps from \"components/maps/Maps\";\r\nimport GamePicker from \"components/identifier/GamePicker\";\r\nimport Alchemy from \"components/alchemy/Alchemy\";\r\n\r\nexport enum Routes {\r\n  Root = \"/\",\r\n  RandomParty = \"/random-party\",\r\n  ItemIdentifier = \"/item-identifier\",\r\n  ItemIdentifierForGame = \"/item-identifier/:game\",\r\n  SkillTrainers = \"/skill-trainers\",\r\n  Maps = \"/maps\",\r\n  Alchemy = \"/alchemy\",\r\n}\r\n\r\nconst Routing: React.FC = () =>\r\n  <Switch>\r\n    <Route path={Routes.RandomParty} exact component={RandomParty} />\r\n    <Route path={Routes.ItemIdentifier} exact component={GamePicker} />\r\n    <Route path={Routes.ItemIdentifierForGame} exact component={GamePicker} />\r\n    <Route path={Routes.SkillTrainers} exact component={Trainers} />\r\n    <Route path={Routes.Maps} exact component={Maps} />\r\n    <Route path={Routes.Alchemy} exact component={Alchemy} />\r\n    <Route path={Routes.Root} exact component={About} />\r\n    <Route>\r\n      <NotFound />\r\n    </Route>\r\n  </Switch>;\r\n\r\nexport default Routing;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport weaponData from \"./game-data/mm3/weapons.json\";\r\nimport armorData from \"./game-data/mm3/armor.json\";\r\nimport handheldItemData from \"./game-data/mm3/handheld-items.json\";\r\nimport imbuedData from \"./game-data/mm3/imbued.json\";\r\nimport miscData from \"./game-data/mm3/misc.json\";\r\nimport modsData from \"./game-data/mm3/mods.json\";\r\nimport specialItemData from \"./game-data/mm3/special-items.json\";\r\nimport { IWeapon, IArmor, IHandheldItem, IImbue, IMiscItem, IMod, ISpecialItem } from \"./ItemTypes\";\r\n\r\n\r\nconst MM3Id: React.FC = () =>\r\n  <Identifier\r\n    game=\"3\"\r\n    weapons={weaponData as IWeapon[]}\r\n    armor={armorData as IArmor[]}\r\n    handheldItems={handheldItemData as IHandheldItem[]}\r\n    imbues={imbuedData as IImbue[]}\r\n    miscItems={miscData as IMiscItem[]}\r\n    mods={modsData as IMod[]}\r\n    specialItems={specialItemData as ISpecialItem[]}\r\n    note={(\r\n      <p><a href=\"http://shrines.rpgclassics.com/pc/mm3/\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a></p>\r\n    )}\r\n  />;\r\n\r\nexport default MM3Id;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport weaponData from \"./game-data/mm4-5/weapons.json\";\r\nimport armorData from \"./game-data/mm4-5/armor.json\";\r\nimport miscData from \"./game-data/mm4-5/misc.json\";\r\nimport modsData from \"./game-data/mm4-5/mods.json\";\r\nimport { IWeapon, IArmor, IMiscItem, IMod } from \"./ItemTypes\";\r\n\r\nconst MMXeenId: React.FC = () =>\r\n  <Identifier\r\n    game=\"4/5\"\r\n    weapons={weaponData as IWeapon[]}\r\n    armor={armorData as IArmor[]}\r\n    handheldItems={[]}\r\n    imbues={[]}\r\n    miscItems={miscData as IMiscItem[]}\r\n    mods={modsData as IMod[]}\r\n    specialItems={[]}\r\n    note={(\r\n      <p><a href=\"http://shrines.rpgclassics.com/pc/mm4_5/\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a></p>\r\n    )}\r\n  />;\r\n\r\nexport default MMXeenId;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport weaponData from \"./game-data/mm2/weapons.json\";\r\nimport armorData from \"./game-data/mm2/armor.json\";\r\nimport miscData from \"./game-data/mm2/misc.json\";\r\nimport { IWeapon, IArmor, IOtherItem } from \"./ItemTypes\";\r\n\r\nconst MM2Id: React.FC = () =>\r\n  <Identifier\r\n    game=\"2\"\r\n    weapons={weaponData as IWeapon[]}\r\n    armor={armorData as IArmor[]}\r\n    handheldItems={[]}\r\n    imbues={[]}\r\n    miscItems={[]}\r\n    otherItems={miscData as IOtherItem[]}\r\n    mods={[]}\r\n    specialItems={[]}\r\n    searchExact={true}\r\n    note={(\r\n      <p><a href=\"http://shrines.rpgclassics.com/pc/mm2/\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a></p>\r\n    )}\r\n  />;\r\n\r\nexport default MM2Id;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport items from \"./game-data/mm1/items.json\";\r\nimport { IMM1Item } from \"./ItemTypes\";\r\n\r\nconst MM1Id: React.FC = () =>\r\n  <Identifier\r\n    game=\"1\"\r\n    weapons={[]}\r\n    armor={[]}\r\n    handheldItems={[]}\r\n    imbues={[]}\r\n    miscItems={[]}\r\n    otherItems={[]}\r\n    mods={[]}\r\n    specialItems={[]}\r\n    mm1Items={items as IMM1Item[]}\r\n    searchExact={true}\r\n    note={(\r\n      <p>\r\n        SPECIAL = EQUIP/NONE/???, can or can't be equipped, otherwise equip gives +protection or +attribute;\r\n        AMT = how much attr is increased (e.g. COLD/50 is +%) cold resist);\r\n        MAGIC = Y/N determines if it can cast magic, the number is the number of charges;\r\n        COST = gold value;\r\n        DMG = base weapon damage (e.g. club is 1-3 damage);\r\n        AC/DMG = AC if armor or extra damage. <a href=\"http://alexandria.rpgclassics.com/PC/mightandmagic/mightandmagic_3.txt\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a>\r\n      </p>\r\n    )}\r\n  />;\r\n\r\nexport default MM1Id;","import React from \"react\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport { Routes } from \"Routing\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport \"./GamePicker.scoped.scss\";\r\nimport MM3Id from \"./MM3Id\";\r\nimport MMXeenId from \"./MMXeenId\";\r\nimport MM2Id from \"./MM2Id\";\r\nimport MM1Id from \"./MM1Id\";\r\n\r\ninterface IGamePickerProps {\r\n  game: string,\r\n}\r\n\r\nconst GamePicker: React.FC<RouteComponentProps<IGamePickerProps>> = (props) => {\r\n  const game = props.match.params.game;\r\n  \r\n  if (game === \"mm1\") {\r\n    return <MM1Id />;\r\n  } else if (game === \"mm2\") {\r\n    return <MM2Id />;\r\n  } else if (game === \"mm3\") {\r\n    return <MM3Id />;\r\n  } else if (game === \"mmxeen\") {\r\n    return <MMXeenId />;\r\n  } else {\r\n    return (\r\n      <PageLayout\r\n        header={(\r\n          <PageTitle title=\"M&amp;M Item Identifier\" />\r\n        )}\r\n      >\r\n        <div>\r\n          Choose game:\r\n          \r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mm1')}>\r\n            MM1\r\n          </Link>\r\n\r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mm2')}>\r\n            MM2\r\n          </Link>\r\n\r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mm3')}>\r\n            MM3\r\n          </Link>\r\n    \r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mmxeen')}>\r\n            MM4/5\r\n          </Link>\r\n        </div>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePicker;","import React from \"react\";\r\nimport \"./Potion.scoped.scss\";\r\n\r\ninterface IPotionProps {\r\n  potion: IPotion,\r\n  recipes: IPotion[],\r\n  isTop?: boolean,\r\n}\r\n\r\nexport interface IPotion {\r\n  name: string,\r\n  recipe: string,\r\n  effect: string,\r\n  type: string,\r\n}\r\n\r\nconst Potion: React.FC<IPotionProps> = ({ potion: { name, recipe, effect }, recipes, isTop }) => {\r\n  let components = recipe.split(' + ')\r\n    .map(pot => recipes.find(r => r.name === pot)\r\n      || pot)\r\n    .map((comp, ix) => {\r\n      if (typeof comp === \"string\") {\r\n        if (comp === \"Empty Bottle\") {\r\n          return null;\r\n        }\r\n        return <span key={\"comp_\" + ix} className={`color-${comp.substr(0, 1)}`}>{comp.substr(0, 1)}</span>;\r\n      } else {\r\n        return (\r\n          <Potion\r\n            potion={comp}\r\n            recipes={recipes}\r\n            key={ix}\r\n          />\r\n        );\r\n      }\r\n    });\r\n\r\n  let renderComps: JSX.Element[] = [];\r\n\r\n  components\r\n    .forEach((comp, ix, arr) => {\r\n      if (comp === null) {\r\n        return;\r\n      }\r\n\r\n      if (ix > 0) {\r\n        renderComps.push(\r\n          <span key={\"plus_\" + ix} className=\"plus\">+</span>\r\n        );\r\n      }\r\n\r\n      renderComps.push(comp);\r\n    });\r\n\r\n  return (\r\n    <div\r\n      className={`potion ${isTop ? \"top\" : \"\"}`}\r\n    >\r\n      <span\r\n        className=\"name\"\r\n      >\r\n        {name}\r\n      </span>\r\n      <span\r\n        className=\"effect\"\r\n      >\r\n        {effect}\r\n      </span>\r\n      {renderComps}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Potion;","import React, { useState } from \"react\";\r\nimport mm6Recipes from \"./game-data/mm6.json\";\r\nimport mm7Recipes from \"./game-data/mm7.json\";\r\nimport mm8Recipes from \"./game-data/mm8.json\";\r\nimport Potion, { IPotion } from \"./Potion\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./Alchemy.scoped.scss\";\r\n\r\nconst gameRecipes: IGameIndexable = {\r\n  \"MM6\": mm6Recipes,\r\n  \"MM7\": mm7Recipes,\r\n  \"MM8\": mm8Recipes,\r\n};\r\n\r\ninterface IGameIndexable {\r\n  [index: string]: IPotion[];\r\n};\r\n\r\nconst getSimpleComponents = (recipe: string, list: IPotion[]): JSX.Element | null => {\r\n  if (recipe.indexOf(\"Empty Bottle\") > -1) {\r\n    const color = recipe.substr(0, 1);\r\n    return <span className={`color-${color}`}>{color}</span>;\r\n  }\r\n\r\n  let chunks = recipe.split(\" + \");\r\n  let chunk0 = list.find(x => x.name === chunks[0]);\r\n  let chunk1 = list.find(x => x.name === chunks[1]);\r\n\r\n  if (!chunk0\r\n    || !chunk1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      ({getSimpleComponents(chunk0?.recipe, list)} + {getSimpleComponents(chunk1.recipe, list)})\r\n    </span>\r\n  )\r\n}\r\n\r\nconst Alchemy: React.FC = () => {\r\n  const [game, setGame] = useState(\"MM6\");\r\n  const [potionType, setPotionType] = useState(\"All\");\r\n  const [potionName, setPotionName] = useState(\"All\");\r\n  const [showSimplified, setShowSimplified] = useState(true);\r\n\r\n  const recipes = gameRecipes[game];\r\n  const potionTypes = [...new Set(recipes.map(x => x.type))];\r\n\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <div className=\"header\">\r\n          <PageTitle\r\n            title={`${game} Alchemy`}\r\n          />\r\n          <div className=\"row\">\r\n            <label>Game:</label>\r\n            <div className=\"buttons\">\r\n              {Object.keys(gameRecipes).map(gm => (\r\n                <button\r\n                  key={gm}\r\n                  onClick={() => {\r\n                    setGame(gm);\r\n                    setPotionType(\"All\");\r\n                    setPotionName(\"All\");\r\n                  }}\r\n                  className={`primary-button ${gm === game ? \"active\" : \"\"}`}\r\n                >\r\n                  {gm}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label>Potion Type:</label>\r\n            <div className=\"buttons\">\r\n              <button\r\n                onClick={() => setPotionType(\"All\")}\r\n                className={`primary-button ${\"All\" === potionType ? \"active\" : \"\"}`}\r\n              >\r\n                All\r\n              </button>\r\n              {potionTypes.map(pt => (\r\n                <button\r\n                  key={pt}\r\n                  onClick={() => {\r\n                    setPotionType(pt);\r\n                    setPotionName(\"All\");\r\n                  }}\r\n                  className={`primary-button ${pt === potionType ? \"active\" : \"\"}`}\r\n                >\r\n                  {pt}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label>Potion:</label>\r\n            <div className=\"buttons\">\r\n              <button\r\n                onClick={() => setPotionName(\"All\")}\r\n                className={`primary-button ${\"All\" === potionName ? \"active\" : \"\"}`}\r\n              >\r\n                All\r\n              </button>\r\n              {recipes\r\n                .filter(pot => pot.type === potionType)\r\n                .map(pt => (\r\n                  <button\r\n                    key={pt.name}\r\n                    onClick={() => setPotionName(pt.name)}\r\n                    className={`primary-button ${pt.name === potionName ? \"active\" : \"\"}`}\r\n                  >\r\n                    {pt.name}\r\n                  </button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Simplified Notation\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"simple\"\r\n                checked={showSimplified}\r\n                onChange={(e) => setShowSimplified(e.target.checked)}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      )}\r\n    >\r\n      {recipes\r\n        .filter(potion => (potionType === \"All\"\r\n          || potion.type === potionType)\r\n          && (potionName === \"All\"\r\n            || potionName === potion.name))\r\n        .map(potion => showSimplified\r\n          ? (\r\n            <div\r\n              className=\"simple-potion\"\r\n              key={potion.name}\r\n            >\r\n              <label>{potion.name}</label>\r\n              {getSimpleComponents(potion.recipe, recipes)}\r\n              <span\r\n                className=\"effect\"\r\n              >\r\n                {potion.effect}\r\n              </span>\r\n            </div>\r\n          )\r\n          : (\r\n            <Potion\r\n              potion={potion}\r\n              recipes={recipes}\r\n              key={potion.name}\r\n              isTop={true}\r\n            />\r\n          )\r\n        )\r\n      }\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default Alchemy;","import React from 'react';\r\nimport \"./MenuItem.scoped.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\ninterface IMenuItemProps {\r\n  label: string,\r\n  icon: string,\r\n  url: string,\r\n  onClick?(): void,\r\n  isCollapsed: boolean,\r\n  matchExact?: boolean,\r\n}\r\n\r\nconst MenuItem: React.FC<IMenuItemProps> = ({ label, icon, url, onClick, isCollapsed, matchExact }) => {\r\n  let match = useRouteMatch({\r\n    path: url,\r\n    exact: matchExact === undefined || matchExact,\r\n  });\r\n\r\n  if (url) {\r\n    return (\r\n      <Link\r\n        to={url}\r\n        className={`menu-item ${match ? \"active\" : \"\"} ${isCollapsed ? \"collapsed\" : \"\"}`}\r\n        title={label}\r\n      >\r\n        <img src={icon} alt={label} /> <label>{label}</label>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        className={`menu-item ${isCollapsed ? \"collapsed\" : \"\"}`}\r\n        onClick={onClick}\r\n      >\r\n        {icon &&\r\n          <img src={icon} alt={label} />\r\n        }\r\n        <label>{label}</label>\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, { useState } from 'react';\r\nimport \"./MainMenu.scoped.scss\";\r\nimport backupIcon from \"media/icons/backup.svg\";\r\nimport magnifyingGlassIcon from \"media/icons/magnifying-glass.svg\";\r\nimport hamburgerMenuIcon from \"media/icons/hamburger-menu.svg\";\r\nimport teacherIcon from \"media/icons/teacher.svg\";\r\nimport mapIcon from \"media/icons/treasure-map.svg\";\r\nimport helpIcon from \"media/icons/help.svg\";\r\nimport potionIcon from \"media/icons/potion-ball.svg\";\r\nimport MenuItem from './MenuItem';\r\nimport { Routes } from '../../Routing';\r\n\r\nconst MainMenu: React.FC = () => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n\r\n  return (\r\n    <div className=\"main-menu\">\r\n      <MenuItem\r\n        label=\"Menu\"\r\n        icon={hamburgerMenuIcon}\r\n        url=\"\"\r\n        isCollapsed={isCollapsed}\r\n        onClick={() => setIsCollapsed(!isCollapsed)}\r\n      />\r\n      <MenuItem\r\n        label=\"Random Party\"\r\n        icon={backupIcon}\r\n        url={Routes.RandomParty}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Skill Trainers\"\r\n        icon={teacherIcon}\r\n        url={Routes.SkillTrainers}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Maps\"\r\n        icon={mapIcon}\r\n        url={Routes.Maps}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Item Identifier\"\r\n        icon={magnifyingGlassIcon}\r\n        url={Routes.ItemIdentifier}\r\n        isCollapsed={isCollapsed}\r\n        matchExact={false}\r\n      />\r\n      <MenuItem\r\n        label=\"Alchemy\"\r\n        icon={potionIcon}\r\n        url={Routes.Alchemy}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"About\"\r\n        icon={helpIcon}\r\n        url={Routes.Root}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport \"./Layout.scoped.scss\";\r\nimport MainMenu from './MainMenu';\r\n\r\nconst Layout: React.FC = ({ children }) =>\r\n  <div className=\"site\">\r\n    <MainMenu />\r\n    <div className=\"page-content\">\r\n      {children}\r\n    </div>\r\n  </div>;\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport Routing from './Routing';\nimport Layout from './components/layout/Layout';\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\n\nconst App: React.FC = () =>\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Layout>\n      <Routing />\n    </Layout>\n  </BrowserRouter>;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}