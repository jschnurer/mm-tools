{"version":3,"sources":["media/mm7/barrows.png","media/icons/backup.svg","media/icons/magnifying-glass.svg","media/icons/hamburger-menu.svg","media/icons/teacher.svg","media/icons/treasure-map.svg","media/icons/help.svg","media/icons/potion-ball.svg","components/identifier/ItemTypes.ts","components/layout/PageTitle.tsx","components/layout/FlowLayout.tsx","components/parties/RandomParty.tsx","NotFound.tsx","components/About.tsx","components/layout/Modal.tsx","components/mm-trainers/Trainer.tsx","components/mm-trainers/Trainers.tsx","components/maps/Maps.tsx","components/identifier/Identifier.tsx","Routing.tsx","components/identifier/MM3Id.tsx","components/identifier/MMXeenId.tsx","components/identifier/MM2Id.tsx","components/identifier/MM1Id.tsx","components/identifier/GamePicker.tsx","components/alchemy/Potion.tsx","components/alchemy/Alchemy.tsx","components/layout/MenuItem.tsx","components/layout/MainMenu.tsx","components/layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ItemTypes","PageTitle","title","useEffect","document","className","FlowLayout","children","header","footer","MMGames","availableRaces","availableClasses","MM10ClassesByRace","partySizes","RandomParty","useState","game","partyMembers","state","setState","map","key","onClick","classKey","raceKey","races","partySize","i","race","Math","floor","random","length","classes","push","character","generateParty","mem","ix","NotFound","About","href","Modal","onClose","Trainer","trainer","onAddClick","onRemoveClick","showAdd","showRemove","isInList","skill","level","name","undefined","location","note","games","skillLevels","Trainers","setGame","category","setCategory","setSkill","isToDoOpen","setIsToDoOpen","mm2","mm3","mm45","mm6","mm7","mm8","toDoLists","setToDoLists","toDoList","item","localStorage","getItem","parsedValue","JSON","parse","removeSkillFromToDo","newToDoLists","filterFunc","x","filter","setItem","stringify","trainers","skillTrainers","categories","Set","t","sort","a","b","skills","filteredTrainers","aLvl","indexOf","bLvl","gm","changeGame","cat","changeCategory","sk","find","sortFunc","addSkillToDo","resetToDos","Maps","src","mm7BarrowMap","alt","Routes","Identifier","weapons","armor","handheldItems","miscItems","mods","specialItems","otherItems","imbues","mm1Items","searchExact","searchTerm","setSearchTerm","items","setItems","searchBoxRef","useRef","current","focus","setSpecialItem","appendItem","purpose","findItem","search","special","toUpperCase","Special","weapon","Weapon","armorItem","Armor","handheldItem","Handheld","miscItem","Misc","otherItem","Other","mm1Item","MM1Item","findAllMods","property","findAllImbues","suffix","setWeapon","dmgBonus","forEach","mod","damage","toHit","toHitString","toString","allOthers","getOthersString","spells","getCastsString","bonus","useAbility","dmg","parseInt","setOther","totalAC","acBonus","ac","classesString","acString","setMM1Item","amt","magic","cost","acDmg","other","join","spell","onSubmit","e","preventDefault","trim","term","result","type","replace","select","doSearch","placeholder","value","onChange","target","ref","split","line","MM3Id","weaponData","armorData","handheldItemData","imbuedData","miscData","modsData","specialItemData","rel","MMXeenId","MM2Id","MM1Id","GamePicker","props","match","params","to","ItemIdentifierForGame","Potion","potion","recipe","effect","recipes","isTop","components","pot","r","comp","substr","renderComps","arr","gameRecipes","mm6Recipes","mm7Recipes","mm8Recipes","Alchemy","potionType","setPotionType","potionName","setPotionName","showSimplified","setShowSimplified","potionTypes","Object","keys","pt","checked","getSimpleComponents","list","color","chunks","chunk0","chunk1","Routing","path","exact","component","ItemIdentifier","SkillTrainers","Root","MenuItem","label","icon","url","isCollapsed","matchExact","useRouteMatch","MainMenu","setIsCollapsed","hamburgerMenuIcon","backupIcon","teacherIcon","mapIcon","magnifyingGlassIcon","potionIcon","helpIcon","Layout","App","basename","process","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b4ee29ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/barrows.ae4696d4.png\";","module.exports = __webpack_public_path__ + \"static/media/backup.668d563a.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.ab6f39ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger-menu.6a56a4aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/teacher.7ef056f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/treasure-map.75c4582a.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.d72eb3c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/potion-ball.4c5508b8.svg\";","export interface IWeapon {\r\n  name: string;\r\n  classes: string;\r\n  hands: string;\r\n  damage: string;\r\n  bonus?: string;\r\n  useAbility?: string;\r\n}\r\n\r\nexport interface IArmor {\r\n  name: string;\r\n  classes: string;\r\n  acBonus: number;\r\n  bonus?: string;\r\n  useAbility?: string;\r\n}\r\n\r\nexport interface IHandheldItem {\r\n  name: string;\r\n  classes: string;\r\n  acBonus: number;\r\n}\r\n\r\nexport interface IImbue {\r\n  suffix: string;\r\n  spell: string;\r\n}\r\n\r\nexport interface IMiscItem {\r\n  name: string;\r\n  type: string;\r\n  acBonus: number;\r\n}\r\n\r\nexport interface IOtherItem {\r\n  name: string;\r\n  classes: string;\r\n  bonus: string;\r\n  useAbility: string;\r\n  acBonus: undefined;\r\n}\r\n\r\nexport interface IMod {\r\n  property: string;\r\n  toHit: string | number;\r\n  damage: string | number;\r\n  ac: string | number;\r\n  other: string;\r\n}\r\n\r\nexport interface ISpecialItem {\r\n  name: string;\r\n  purpose: string;\r\n  location: string;\r\n}\r\n\r\nexport interface IMM1Item {\r\n  name: string;\r\n  classes: string;\r\n  special: string;\r\n  amt: number;\r\n  magic: string;\r\n  cost: number;\r\n  dmg: number;\r\n  acDmg: number;\r\n}\r\n\r\nexport type IItem =\r\n  IWeapon\r\n  | IArmor\r\n  | IHandheldItem\r\n  | IMiscItem\r\n  | ISpecialItem\r\n  | IOtherItem\r\n  | IMM1Item;\r\n\r\nexport enum ItemTypes {\r\n  Weapon,\r\n  Armor,\r\n  Handheld,\r\n  Misc,\r\n  Special,\r\n  Other,\r\n  MM1Item,\r\n}","import React, { useEffect } from 'react';\r\n\r\ninterface IPageTitleProps {\r\n  title: string,\r\n}\r\n\r\nconst PageTitle: React.FC<IPageTitleProps> = ({ title }) => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  return (\r\n    <h2 className=\"page-title\">\r\n      {title}\r\n    </h2>\r\n  )\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport \"./FlowLayout.scoped.scss\";\r\n\r\ninterface IFlowLayoutProps {\r\n  header?: JSX.Element;\r\n  footer?: JSX.Element;\r\n}\r\n\r\nconst FlowLayout: React.FC<IFlowLayoutProps> = ({ children, header, footer }) =>\r\n  <div className=\"page-layout\">\r\n    {header &&\r\n      <div className=\"page-header\">\r\n        {header}\r\n      </div>\r\n    }\r\n    <div className=\"page-body\">\r\n      {children}\r\n    </div>\r\n    {footer &&\r\n      <div className=\"page-footer\">\r\n        {footer}\r\n      </div>\r\n    }\r\n  </div>;\r\n\r\nexport default FlowLayout;\r\n","import React, { useState } from \"react\";\r\nimport PageTitle from \"../layout/PageTitle\";\r\nimport FlowLayout from \"../layout/FlowLayout\";\r\n\r\nconst MMGames = [\r\n  \"MM1\",\r\n  \"MM2\",\r\n  \"MM3\",\r\n  \"MM4/5\",\r\n  \"MM6\",\r\n  \"MM7\",\r\n  \"MM8\",\r\n  \"MM9\",\r\n  \"MM10\",\r\n];\r\n\r\ninterface IGameIndexable {\r\n  [index: string]: string[];\r\n};\r\n\r\nconst availableRaces: IGameIndexable = {\r\n  \"MM3\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Gnome\",\r\n    \"Half-Orc\",\r\n  ],\r\n  \"MM7\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Goblin\",\r\n  ],\r\n  \"MM9\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Half-Orc\",\r\n  ],\r\n  \"MM10\": [\r\n    \"Human\",\r\n    \"Elf\",\r\n    \"Dwarf\",\r\n    \"Orc\",\r\n  ],\r\n};\r\n\r\nconst availableClasses: IGameIndexable = {\r\n  \"MM1\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Robber\",\r\n  ],\r\n  \"MM2\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Robber\",\r\n    \"Ninja\",\r\n    \"Barbarian\",\r\n  ],\r\n  \"MM3\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Robber\",\r\n    \"Ninja\",\r\n    \"Barbarian\",\r\n    \"Druid\",\r\n    \"Ranger\",\r\n  ],\r\n  \"MM6\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Druid\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n  ],\r\n  \"MM7\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Druid\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Monk\",\r\n    \"Ranger\",\r\n    \"Thief\",\r\n  ],\r\n  \"MM8\": [\r\n    \"Cleric\",\r\n    \"Dark Elf\",\r\n    \"Knight\",\r\n    \"Minotaur\",\r\n    \"Necromancer\",\r\n    \"Troll\",\r\n    \"Vampire\",\r\n  ],\r\n  \"MM9\": [\r\n    \"Fighter -> Mercenary -> Gladiator\",\r\n    \"Fighter -> Mercenary -> Assassin\",\r\n    \"Fighter -> Crusader -> Ranger\",\r\n    \"Fighter -> Crusader -> Paladin\",\r\n    \"Initiate -> Scholar -> Mage\",\r\n    \"Initiate -> Scholar -> Lich\",\r\n    \"Initiate -> Healer -> Priest\",\r\n    \"Initiate -> Healer -> Druid\",\r\n  ],\r\n};\r\n\r\nconst MM10ClassesByRace: IGameIndexable = {\r\n  \"Human\": [\r\n    \"Mercenary\",\r\n    \"Crusader\",\r\n    \"Freemage\",\r\n  ],\r\n  \"Elf\": [\r\n    \"Bladedancer\",\r\n    \"Ranger\",\r\n    \"Druid\",\r\n  ],\r\n  \"Dwarf\": [\r\n    \"Defender\",\r\n    \"Scout\",\r\n    \"Runepriest\",\r\n  ],\r\n  \"Orc\": [\r\n    \"Barbarian\",\r\n    \"Hunter\",\r\n    \"Shaman\",\r\n  ],\r\n};\r\n\r\ninterface IPartySizes {\r\n  [index: string]: number;\r\n};\r\n\r\nconst partySizes: IPartySizes = {\r\n  \"MM1\": 6,\r\n  \"MM2\": 6,\r\n  \"MM3\": 6,\r\n  \"MM4/5\": 6,\r\n  \"MM6\": 4,\r\n  \"MM7\": 4,\r\n  \"MM8\": 1,\r\n  \"MM9\": 4,\r\n  \"MM10\": 4,\r\n}\r\n\r\ninterface IRandomPartyState {\r\n  game: string,\r\n  partyMembers: string[],\r\n}\r\n\r\nconst RandomParty: React.FC = () => {\r\n  const [state, setState] = useState<IRandomPartyState>({\r\n    game: \"\",\r\n    partyMembers: [],\r\n  });\r\n\r\n  const generateParty = (game: string) => {\r\n    let classKey = game;\r\n    let raceKey = game;\r\n    if (game === \"MM4/5\") {\r\n      classKey = \"MM3\";\r\n    }\r\n    if (game === \"MM1\"\r\n      || game === \"MM2\"\r\n      || game === \"MM4/5\") {\r\n      raceKey = \"MM3\";\r\n    }\r\n\r\n    let partyMembers: string[] = [];\r\n    const races: string[] | undefined = availableRaces[raceKey];\r\n    const partySize = partySizes[game];\r\n\r\n    if (game === \"MM10\") {\r\n      for (let i = 0; i < partySize; i++) {\r\n        const race = races[Math.floor(Math.random() * races.length)];\r\n        const classes = MM10ClassesByRace[race];\r\n\r\n        partyMembers.push(`${classes[Math.floor(Math.random() * classes.length)]} (${race})`);\r\n      }\r\n    } else {\r\n      const classes = availableClasses[classKey];\r\n\r\n      for (let i = 0; i < partySize; i++) {\r\n        let character = classes[Math.floor(Math.random() * classes.length)];\r\n\r\n        if (races) {\r\n          character += ` (${races[Math.floor(Math.random() * races.length)]})`;\r\n        }\r\n\r\n        partyMembers.push(character);\r\n      }\r\n    }\r\n\r\n    setState({\r\n      game,\r\n      partyMembers,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <FlowLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title=\"Random Party\" />\r\n          <div>\r\n            <p>\r\n              Click a button to generate a random party for that game.\r\n            </p>\r\n            {MMGames.map(game => (\r\n              <button\r\n                key={game}\r\n                onClick={() => generateParty(game)}\r\n              >\r\n                {game}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    >\r\n      {state.partyMembers.length > 0 &&\r\n        <div>\r\n          <h4>Random {state.game} Party</h4>\r\n          <ol>\r\n            {state.partyMembers.map((mem, ix) =>\r\n              <li\r\n                key={ix}\r\n              >\r\n                {mem}\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      }\r\n    </FlowLayout>\r\n  );\r\n}\r\n\r\nexport default RandomParty;","import React from 'react';\r\nimport PageTitle from 'components/layout/PageTitle';\r\n\r\nconst NotFound: React.FC = () =>\r\n  <>\r\n    <PageTitle title=\"Whoopsie\" />\r\n    <p>Doesn't look like there's anything here.</p>\r\n  </>;\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport PageTitle from \"./layout/PageTitle\";\r\n\r\nconst About: React.FC = () =>\r\n  <>\r\n    <PageTitle title=\"Might and Magic Tools\" />\r\n    <p>\r\n      Welcome to Might and Magic Tools. Here you'll\r\n      find some tools and info to help you play the games.\r\n    </p>\r\n    <p>\r\n      Have an idea or a request?\r\n      Email me: enigmabrand &lt;at&gt; gmail.\r\n    </p>\r\n    <p>\r\n      The source code for this webapp is <a href=\"https://github.com/jschnurer/mm-tools\">available on github</a>.\r\n    </p>\r\n  </>;\r\n\r\nexport default About;","import React from \"react\";\r\nimport FlowLayout from \"./FlowLayout\";\r\nimport \"./Modal.scoped.scss\";\r\n\r\ninterface IModalProps {\r\n  header: string,\r\n  footer?: JSX.Element,\r\n  onClose(): void,\r\n}\r\n\r\nconst Modal: React.FC<IModalProps> = ({ header, children, footer, onClose }) => {\r\n  return (\r\n    <>\r\n      <div className=\"fade\"></div>\r\n      <div className=\"modal\">\r\n        <FlowLayout\r\n          header={\r\n            <div className=\"header\">\r\n              <span>\r\n                {header}\r\n              </span>\r\n              <span\r\n                className=\"close-button\"\r\n                onClick={() => onClose()}\r\n              >\r\n                X\r\n              </span>\r\n            </div>\r\n          }\r\n          footer={(\r\n            <div className=\"footer\">\r\n              {footer}\r\n            </div>\r\n          )}\r\n        >\r\n          <div className=\"body\">\r\n            {children}\r\n          </div>\r\n        </FlowLayout>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport { ISkillTrainer } from \"./Trainers\";\r\nimport \"./Trainer.scoped.scss\";\r\n\r\ninterface ITrainerProps {\r\n  trainer: ISkillTrainer,\r\n  onAddClick?(): void,\r\n  onRemoveClick?(): void,\r\n  showAdd: boolean,\r\n  showRemove: boolean,\r\n  isInList?: boolean,\r\n}\r\n\r\nconst Trainer: React.FC<ITrainerProps> = ({ trainer, onAddClick, onRemoveClick, showAdd, showRemove, isInList }) =>\r\n  <div\r\n    className=\"trainer\"\r\n    key={trainer.skill + trainer.level + trainer.name}\r\n  >\r\n    {(showAdd || showRemove) &&\r\n      <div>\r\n        <button\r\n          onClick={showAdd\r\n            ? onAddClick\r\n            : showRemove\r\n              ? onRemoveClick\r\n              : undefined}\r\n          className={isInList ? \"primary-button\" : \"\"}\r\n        >\r\n          {showAdd ? \"+\" : \"\"}\r\n          {showRemove ? \"-\" : \"\"}\r\n        </button>\r\n      </div>\r\n    }\r\n    <div>\r\n      <label>\r\n        {trainer.skill} {trainer.level}\r\n      </label>\r\n      {trainer.location}{trainer.name\r\n        ? <>, {trainer.name}</>\r\n        : undefined\r\n      }\r\n      {trainer.note &&\r\n        <span\r\n          className=\"note\"\r\n        >\r\n          {trainer.note}\r\n        </span>\r\n      }\r\n    </div>\r\n  </div>;\r\n\r\nexport default Trainer;","import React, { useState, useEffect } from \"react\";\r\nimport skillTrainers from \"./skill-trainers.json\";\r\nimport FlowLayout from \"components/layout/FlowLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./Trainers.scoped.scss\";\r\nimport Modal from \"components/layout/Modal\";\r\nimport Trainer from \"./Trainer\";\r\n\r\nexport interface ISkillTrainer {\r\n  category: string;\r\n  level: string;\r\n  skill: string;\r\n  name: string;\r\n  location: string;\r\n  note?: string;\r\n}\r\n\r\nconst games = [\"MM2\", \"MM3\", \"MM4/5\", \"MM6\", \"MM7\", \"MM8\"];\r\nconst skillLevels = [\"Normal\", \"Expert\", \"Master\", \"Grandmaster\"];\r\n\r\ninterface ISavedToDoList {\r\n  mm2: ISkillTrainer[],\r\n  mm3: ISkillTrainer[],\r\n  mm45: ISkillTrainer[],\r\n  mm6: ISkillTrainer[],\r\n  mm7: ISkillTrainer[],\r\n  mm8: ISkillTrainer[],\r\n}\r\n\r\nconst Trainers: React.FC = () => {\r\n  const [game, setGame] = useState(\"MM6\");\r\n  const [category, setCategory] = useState(\"*\");\r\n  const [skill, setSkill] = useState(\"*\");\r\n  const [isToDoOpen, setIsToDoOpen] = useState(false);\r\n  const [toDoLists, setToDoLists] = useState<ISavedToDoList>({\r\n    mm2: [],\r\n    mm3: [],\r\n    mm45: [],\r\n    mm6: [],\r\n    mm7: [],\r\n    mm8: [],\r\n  });\r\n\r\n  let toDoList: ISkillTrainer[] = [];\r\n\r\n  useEffect(() => {\r\n    const item = localStorage.getItem(\"SkillTrainers/ToDo\");\r\n\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let parsedValue = JSON.parse(item);\r\n      setToDoLists(parsedValue);\r\n    } catch {\r\n    }\r\n  }, []);\r\n\r\n  const resetToDos = () => {\r\n    let newToDoLists: ISavedToDoList;\r\n\r\n    if (game === \"MM2\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm2: [],\r\n      };\r\n    } else if (game === \"MM3\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm3: [],\r\n      };\r\n    } else if (game === \"MM4/5\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm45: [],\r\n      };\r\n    } else if (game === \"MM6\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm6: [],\r\n      };\r\n    } else if (game === \"MM7\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm7: [],\r\n      };\r\n    } else if (game === \"MM8\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm8: [],\r\n      };\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    setToDoLists(newToDoLists);\r\n    localStorage.setItem(\"SkillTrainers/ToDo\", JSON.stringify(newToDoLists));\r\n  }\r\n\r\n  const addSkillToDo = (trainer: ISkillTrainer) => {\r\n    if (toDoList.find(x => x.name === trainer.name\r\n      && x.skill === trainer.skill\r\n      && x.location === trainer.location)) {\r\n      return;\r\n    }\r\n\r\n    const sortFunc = (a: ISkillTrainer, b: ISkillTrainer) =>\r\n      a.location < b.location\r\n        ? -1\r\n        : 1;\r\n\r\n    let newToDoLists: ISavedToDoList;\r\n\r\n    if (game === \"MM2\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm2: [...toDoList, trainer].sort(sortFunc),\r\n      };\r\n    } else if (game === \"MM3\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm3: [...toDoList, trainer].sort(sortFunc),\r\n      };\r\n    } else if (game === \"MM4/5\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm45: [...toDoList, trainer].sort(sortFunc),\r\n      };\r\n    } else if (game === \"MM6\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm6: [...toDoList, trainer].sort(sortFunc),\r\n      };\r\n    } else if (game === \"MM7\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm7: [...toDoList, trainer].sort(sortFunc),\r\n      };\r\n    } else if (game === \"MM8\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm8: [...toDoList, trainer].sort(sortFunc),\r\n      };\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    setToDoLists(newToDoLists);\r\n    localStorage.setItem(\"SkillTrainers/ToDo\", JSON.stringify(newToDoLists));\r\n  }\r\n\r\n  const removeSkillFromToDo = (trainer: ISkillTrainer) => {\r\n    let newToDoLists: ISavedToDoList;\r\n\r\n    const filterFunc = (x: ISkillTrainer) => !(x.skill === trainer.skill\r\n      && x.location === trainer.location\r\n      && x.name === trainer.name);\r\n\r\n    if (game === \"MM2\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm2: toDoList.filter(filterFunc),\r\n      };\r\n    } else if (game === \"MM3\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm3: toDoList.filter(filterFunc),\r\n      };\r\n    } else if (game === \"MM4/5\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm45: toDoList.filter(filterFunc),\r\n      };\r\n    } else if (game === \"MM6\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm6: toDoList.filter(filterFunc),\r\n      };\r\n    } else if (game === \"MM7\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm7: toDoList.filter(filterFunc),\r\n      };\r\n    } else if (game === \"MM8\") {\r\n      newToDoLists = {\r\n        ...toDoLists,\r\n        mm8: toDoList.filter(filterFunc),\r\n      };\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    setToDoLists(newToDoLists);\r\n    localStorage.setItem(\"SkillTrainers/ToDo\", JSON.stringify(newToDoLists));\r\n  }\r\n\r\n  let trainers: ISkillTrainer[] = [];\r\n\r\n  if (game === \"MM2\") {\r\n    trainers = skillTrainers.mm2;\r\n    toDoList = toDoLists.mm2;\r\n  } else if (game === \"MM3\") {\r\n    trainers = skillTrainers.mm3;\r\n    toDoList = toDoLists.mm3;\r\n  } else if (game === \"MM4/5\") {\r\n    trainers = skillTrainers[\"mm4/5\"];\r\n    toDoList = toDoLists.mm45;\r\n  } else if (game === \"MM6\") {\r\n    trainers = skillTrainers.mm6;\r\n    toDoList = toDoLists.mm6;\r\n  } else if (game === \"MM7\") {\r\n    trainers = skillTrainers.mm7;\r\n    toDoList = toDoLists.mm7;\r\n  } else if (game === \"MM8\") {\r\n    trainers = skillTrainers.mm8;\r\n    toDoList = toDoLists.mm8;\r\n  }\r\n\r\n  const categories = [\"*\",\r\n    ...new Set(trainers\r\n      .map(t => t.category))]\r\n    .sort((a, b) => a < b ? -1 : 1);\r\n\r\n  const skills = [\"*\",\r\n    ...new Set(trainers\r\n      .filter(t => t.category === category\r\n        || category === \"*\")\r\n      .map(t => t.skill))]\r\n    .sort((a, b) => a < b ? -1 : 1);\r\n\r\n  const filteredTrainers = trainers\r\n    .filter(t => (t.category === category\r\n      || category === \"*\"\r\n    )\r\n      && (skill === \"*\"\r\n        || t.skill === skill))\r\n    .sort((a, b) => {\r\n      if (a.skill < b.skill) {\r\n        return -1;\r\n      } else if (a.skill > b.skill) {\r\n        return 1;\r\n      }\r\n\r\n      const aLvl = skillLevels.indexOf(a.level);\r\n      const bLvl = skillLevels.indexOf(b.level);\r\n\r\n      if (aLvl < bLvl) {\r\n        return -1;\r\n      } else if (aLvl > bLvl) {\r\n        return 1;\r\n      }\r\n\r\n      if (a.location < b.location) {\r\n        return -1;\r\n      } else if (a.location > b.location) {\r\n        return 1;\r\n      }\r\n\r\n      return a.name < b.name\r\n        ? -1\r\n        : 1;\r\n    });\r\n\r\n  const changeGame = (game: string) => {\r\n    setGame(game);\r\n    setSkill(\"*\");\r\n  }\r\n\r\n  const changeCategory = (cat: string) => {\r\n    setCategory(cat);\r\n    setSkill(\"*\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FlowLayout\r\n        header={(\r\n          <div className=\"controls\">\r\n            <PageTitle title={`${game} Skill Trainers`} />\r\n            <div>\r\n              <button\r\n                onClick={() => setIsToDoOpen(true)}\r\n              >\r\n                View {game} ToDo List\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Game:\r\n            </label>\r\n              {games.map(gm => (\r\n                <button\r\n                  className={gm === game ? \"primary-button\" : \"\"}\r\n                  key={gm}\r\n                  onClick={() => changeGame(gm)}\r\n                >\r\n                  {gm}\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Categories:\r\n            </label>\r\n              {categories.map(cat => (\r\n                <button\r\n                  className={cat === category ? \"primary-button\" : \"\"}\r\n                  key={cat}\r\n                  onClick={() => changeCategory(cat)}\r\n                >\r\n                  {cat}\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Skill:\r\n            </label>\r\n              {skills.map(sk => (\r\n                <button\r\n                  className={sk === skill ? \"primary-button\" : \"\"}\r\n                  key={sk}\r\n                  onClick={() => setSkill(sk)}\r\n                >\r\n                  {sk}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      >\r\n        {filteredTrainers.map(trainer => {\r\n          const isInList = !!toDoList.find(x => x.name === trainer.name\r\n            && x.location === trainer.location\r\n            && x.skill === trainer.skill);\r\n\r\n          return (\r\n            <Trainer\r\n              key={trainer.name + trainer.location + trainer.skill}\r\n              trainer={trainer}\r\n              onAddClick={() => addSkillToDo(trainer)}\r\n              onRemoveClick={() => removeSkillFromToDo(trainer)}\r\n              showAdd={!isInList}\r\n              showRemove={isInList}\r\n              isInList={isInList}\r\n            />\r\n          );\r\n        })}\r\n      </FlowLayout>\r\n      {isToDoOpen &&\r\n        <Modal\r\n          onClose={() => setIsToDoOpen(false)}\r\n          header=\"Skill Trainer ToDo List\"\r\n          footer={(\r\n            <>\r\n              <button\r\n                onClick={() => {\r\n                  resetToDos();\r\n                  setIsToDoOpen(false);\r\n                }}\r\n              >\r\n                Remove All\r\n              </button>\r\n              <button\r\n                className=\"primary-button\"\r\n                onClick={() => setIsToDoOpen(false)}\r\n              >\r\n                Done\r\n              </button>\r\n            </>\r\n          )}\r\n        >\r\n          {!toDoList.length &&\r\n            <p>\r\n              You haven't added any skills to your toDo list.\r\n              Try clicking the \"+\" button next to a skill to add\r\n              it to your list.\r\n            </p>\r\n          }\r\n          {toDoList.length > 0 && \r\n            <p>\r\n              Your ToDo list is sorted by location so you can more\r\n              easily hit up all the trainers in an area in one trip.\r\n            </p>\r\n          }\r\n          {toDoList.length > 0 &&\r\n            toDoList.map(trainer => (\r\n              <Trainer\r\n                key={trainer.name + trainer.location + trainer.skill}\r\n                trainer={trainer}\r\n                onRemoveClick={() => removeSkillFromToDo(trainer)}\r\n                showAdd={false}\r\n                showRemove={true}\r\n              />\r\n            ))\r\n          }\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Trainers;","import React from \"react\";\r\nimport FlowLayout from \"components/layout/FlowLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport mm7BarrowMap from \"media/mm7/barrows.png\"\r\nimport \"./Maps.scoped.scss\";\r\n\r\nconst Maps: React.FC = () => {\r\n  return (\r\n    <FlowLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title=\"Maps\" />\r\n        </>\r\n      )}\r\n    >\r\n      <h2>MM7 Barrows Map</h2>\r\n      <img\r\n        src={mm7BarrowMap}\r\n        alt=\"MM7 Barrows Map\"\r\n      />\r\n    </FlowLayout>\r\n  );\r\n}\r\n\r\nexport default Maps;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./Identifier.scoped.scss\";\r\nimport {\r\n  ISpecialItem,\r\n  IWeapon,\r\n  IArmor,\r\n  IHandheldItem,\r\n  IMiscItem,\r\n  IItem,\r\n  ItemTypes,\r\n  IMod,\r\n  IImbue,\r\n  IOtherItem,\r\n  IMM1Item,\r\n} from \"./ItemTypes\";\r\nimport FlowLayout from \"components/layout/FlowLayout\";\r\n\r\ninterface IIdentifierProps {\r\n  weapons: IWeapon[],\r\n  armor: IArmor[],\r\n  handheldItems: IHandheldItem[],\r\n  miscItems: IMiscItem[],\r\n  mods: IMod[],\r\n  specialItems: ISpecialItem[],\r\n  imbues: IImbue[],\r\n  otherItems?: IOtherItem[],\r\n  mm1Items?: IMM1Item[],\r\n  game: string,\r\n  searchExact?: boolean,\r\n  note?: JSX.Element,\r\n}\r\n\r\nconst Identifier: React.FC<IIdentifierProps> = ({\r\n  weapons,\r\n  armor,\r\n  handheldItems,\r\n  miscItems,\r\n  mods,\r\n  specialItems,\r\n  otherItems,\r\n  imbues,\r\n  mm1Items,\r\n  game,\r\n  searchExact,\r\n  note,\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [items, setItems] = useState<string[]>([]);\r\n  const searchBoxRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    searchBoxRef.current?.focus();\r\n  }, [searchBoxRef]);\r\n\r\n  const doSearch = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!searchTerm.trim()) {\r\n      return;\r\n    }\r\n\r\n    let term = searchTerm.toUpperCase();\r\n\r\n    const result = findItem(term);\r\n\r\n    if (!result) {\r\n      searchBoxRef.current?.select();\r\n      return;\r\n    }\r\n\r\n    const [item, type] = result;\r\n\r\n    if (type === ItemTypes.Special) {\r\n      setSpecialItem(item as ISpecialItem);\r\n      return;\r\n    } else {\r\n      term = term.replace(item.name.toUpperCase(), \"\");\r\n    }\r\n\r\n    const mods = findAllMods(term);\r\n    const imbues = findAllImbues(term);\r\n\r\n    if (type === ItemTypes.Weapon) {\r\n      setWeapon(item as IWeapon, mods, imbues);\r\n    } else if (type === ItemTypes.Armor) {\r\n      setOther(item as IArmor, mods, imbues);\r\n    } else if (type === ItemTypes.Handheld) {\r\n      setOther(item as IHandheldItem, mods, imbues);\r\n    } else if (type === ItemTypes.Misc) {\r\n      setOther(item as IMiscItem, mods, imbues);\r\n    } else if (type === ItemTypes.Other) {\r\n      setOther(item as IOtherItem, mods, imbues);\r\n    } else if (type === ItemTypes.MM1Item) {\r\n      setMM1Item(item as IMM1Item);\r\n    }\r\n\r\n    searchBoxRef.current?.select();\r\n  }\r\n\r\n  const setSpecialItem = (item: ISpecialItem) => {\r\n    appendItem(`${item.name}\r\n    Purpose: ${item.purpose}\r\n    Location: ${item.location}`);\r\n  }\r\n\r\n  const findItem = (search: string): [IItem, ItemTypes] | undefined => {\r\n    let special = specialItems.find(x => x.name.toUpperCase() === search);\r\n    if (special) {\r\n      return [special, ItemTypes.Special];\r\n    }\r\n    let weapon = weapons.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (weapon) {\r\n      return [weapon, ItemTypes.Weapon];\r\n    }\r\n    let armorItem = armor.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (armorItem) {\r\n      return [armorItem, ItemTypes.Armor];\r\n    }\r\n    let handheldItem = handheldItems.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (handheldItem) {\r\n      return [handheldItem, ItemTypes.Handheld];\r\n    }\r\n    let miscItem = miscItems.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (miscItem) {\r\n      return [miscItem, ItemTypes.Misc];\r\n    }\r\n    let otherItem = otherItems?.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (otherItem) {\r\n      return [otherItem, ItemTypes.Other];\r\n    }\r\n    let mm1Item = mm1Items?.find(x => searchExact\r\n      ? x.name.toUpperCase() === search\r\n      : search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (mm1Item) {\r\n      return [mm1Item, ItemTypes.MM1Item];\r\n    }\r\n  }\r\n\r\n  const findAllMods = (search: string): IMod[] => {\r\n    return mods.filter(x => search.indexOf(x.property.toUpperCase()) > -1);\r\n  }\r\n\r\n  const findAllImbues = (search: string): IImbue[] => {\r\n    return imbues.filter(x => search.indexOf(x.suffix.toUpperCase()) > -1);\r\n  }\r\n\r\n  const appendItem = (item: string) => {\r\n    setItems([\r\n      item,\r\n      ...items,\r\n    ]);\r\n  }\r\n\r\n  const setWeapon = (weapon: IWeapon, mods: IMod[], imbues: IImbue[]) => {\r\n    let dmgBonus = \"\";\r\n    mods.forEach(mod => {\r\n      if (!mod.damage\r\n        || mod.damage === \"none\") {\r\n        return;\r\n      }\r\n\r\n      if (typeof mod.damage === \"number\"\r\n        && mod.damage as number > 0) {\r\n        dmgBonus += ` +${mod.damage}`;\r\n      } else {\r\n        dmgBonus += ` ${mod.damage}`;\r\n      }\r\n    });\r\n\r\n    let toHit = 0;\r\n    mods.forEach(mod => {\r\n      if (mod.toHit !== \"none\") {\r\n        toHit += mod.toHit as number;\r\n      }\r\n    });\r\n\r\n    let toHitString = \"\";\r\n\r\n    if (toHit < 0) {\r\n      toHitString = toHit.toString();\r\n    } else if (toHit > 0) {\r\n      toHitString = `+${toHit}`;\r\n    }\r\n\r\n    if (toHitString) {\r\n      toHitString = ` [${toHitString} to hit]`;\r\n    }\r\n\r\n    let allOthers = getOthersString(mods);\r\n    let spells = getCastsString(imbues);\r\n\r\n    if (weapon.bonus\r\n      && (weapon.bonus !== \"None\")) {\r\n      allOthers = allOthers\r\n        ? \", \" + weapon.bonus\r\n        : weapon.bonus || \"\";\r\n    }\r\n\r\n    if (weapon.useAbility\r\n      && weapon.useAbility !== \"None\") {\r\n      spells = spells\r\n        ? \", \" + weapon.bonus\r\n        : \"Casts: \" + weapon.bonus;\r\n    }\r\n\r\n    let dmg = weapon.damage;\r\n\r\n    if (parseInt(dmg, 10) + \"\" === dmg) {\r\n      dmg += \" max damage\";\r\n    }\r\n\r\n    appendItem(`${searchTerm} (${dmg}${dmgBonus})${toHitString} {${weapon.classes}}`\r\n      + (allOthers\r\n        ? `\\n${allOthers}`\r\n        : \"\")\r\n      + (spells\r\n        ? `\\n${spells}`\r\n        : \"\"));\r\n  }\r\n\r\n  const setOther = (item: IArmor | IHandheldItem | IMiscItem | IOtherItem, mods: IMod[], imbues: IImbue[]) => {\r\n    let totalAC = item.acBonus;\r\n    if (totalAC !== undefined) {\r\n      mods\r\n        .filter(mod => typeof mod.ac === \"number\")\r\n        .forEach(mod => {\r\n          if (totalAC !== undefined) {\r\n            totalAC += mod.ac as number;\r\n          }\r\n        });\r\n    }\r\n\r\n    let allOthers = getOthersString(mods);\r\n    let spells = getCastsString(imbues);\r\n    let classesString = (item as any).classes\r\n      ? ` {${(item as any).classes}}`\r\n      : \"\";\r\n\r\n    if ((item as IArmor).bonus\r\n      && (item as IArmor).bonus !== \"None\"\r\n      && (item as IArmor).bonus !== \"No Equip\") {\r\n      allOthers = allOthers\r\n        ? \", \" + (item as IArmor).bonus\r\n        : (item as IArmor).bonus || \"\";\r\n    }\r\n\r\n    if ((item as IArmor).useAbility\r\n      && (item as IArmor).useAbility !== \"N/A\"\r\n      && (item as IArmor).useAbility !== \"None\") {\r\n      spells = spells\r\n        ? \", \" + (item as IArmor).useAbility\r\n        : \"Casts: \" + (item as IArmor).useAbility;\r\n    }\r\n\r\n    let acString = totalAC !== undefined\r\n      ? ` (AC: ${totalAC})`\r\n      : '';\r\n\r\n    appendItem(`${searchTerm}${acString}${classesString}`\r\n      + (allOthers\r\n        ? `\\n${allOthers}`\r\n        : \"\")\r\n      + (spells\r\n        ? `\\n${spells}`\r\n        : \"\"));\r\n  }\r\n\r\n  const setMM1Item = (item: IMM1Item) => {\r\n    appendItem(`${item.name} {${item.classes}}\r\n      SPECIAL: ${item.special}\r\n      AMT: ${item.amt}\r\n      MAGIC: ${item.magic}\r\n      COST: ${item.cost}\r\n      DMG: ${item.dmg}\r\n      AC/DMG: ${item.acDmg}\r\n    `);\r\n  }\r\n\r\n  const getOthersString = (mods: IMod[]) => {\r\n    return mods\r\n      .filter(mod => !!mod.other\r\n        && mod.other !== \"none\")\r\n      .map(mod => mod.other)\r\n      .join(', ');\r\n  }\r\n\r\n  const getCastsString = (imbues: IImbue[]) => {\r\n    let spells = imbues\r\n      .map(x => x.spell)\r\n      .join(', ');\r\n\r\n    if (!!spells) {\r\n      spells = `Casts: ${spells}`;\r\n    }\r\n\r\n    return spells;\r\n  }\r\n\r\n  return (\r\n    <FlowLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title={`M&M ${game} Item Identifier`} />\r\n          <form\r\n            onSubmit={(e) => doSearch(e)}\r\n          >\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by full item name...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                ref={searchBoxRef}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n              >\r\n                Id\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <span>K = Knight</span>\r\n              <span>P = Paladin</span>\r\n              <span>A = Archer</span>\r\n              <span>C = Cleric</span>\r\n              <span>S = Sorcerer</span>\r\n              <span>T = Robber</span>\r\n              <span>N = Ninja</span>\r\n              <span>B = Barbarian</span>\r\n              <span>D = Druid</span>\r\n              <span>R = Ranger</span>\r\n              <span>E = Evil</span>\r\n              <span>G = Good</span>\r\n              <span>EG = +Neutral</span>\r\n            </div>\r\n          </form>\r\n          {note}\r\n        </>\r\n      )}\r\n    >\r\n      {items &&\r\n        items.map((item, ix) =>\r\n          <p\r\n            key={ix}\r\n            className=\"item-description\"\r\n          >\r\n            {item.split('\\n').map((line, ix) =>\r\n              <span key={ix}>{line}</span>\r\n            )}\r\n          </p>\r\n        )\r\n      }\r\n    </FlowLayout>\r\n  );\r\n}\r\n\r\nexport default Identifier;","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport RandomParty from \"./components/parties/RandomParty\";\r\nimport NotFound from \"./NotFound\";\r\nimport About from \"./components/About\";\r\nimport Trainers from \"components/mm-trainers/Trainers\";\r\nimport Maps from \"components/maps/Maps\";\r\nimport GamePicker from \"components/identifier/GamePicker\";\r\nimport Alchemy from \"components/alchemy/Alchemy\";\r\n\r\nexport enum Routes {\r\n  Root = \"/\",\r\n  RandomParty = \"/random-party\",\r\n  ItemIdentifier = \"/item-identifier\",\r\n  ItemIdentifierForGame = \"/item-identifier/:game\",\r\n  SkillTrainers = \"/skill-trainers\",\r\n  Maps = \"/maps\",\r\n  Alchemy = \"/alchemy\",\r\n}\r\n\r\nconst Routing: React.FC = () =>\r\n  <Switch>\r\n    <Route path={Routes.RandomParty} exact component={RandomParty} />\r\n    <Route path={Routes.ItemIdentifier} exact component={GamePicker} />\r\n    <Route path={Routes.ItemIdentifierForGame} exact component={GamePicker} />\r\n    <Route path={Routes.SkillTrainers} exact component={Trainers} />\r\n    <Route path={Routes.Maps} exact component={Maps} />\r\n    <Route path={Routes.Alchemy} exact component={Alchemy} />\r\n    <Route path={Routes.Root} exact component={About} />\r\n    <Route>\r\n      <NotFound />\r\n    </Route>\r\n  </Switch>;\r\n\r\nexport default Routing;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport weaponData from \"./game-data/mm3/weapons.json\";\r\nimport armorData from \"./game-data/mm3/armor.json\";\r\nimport handheldItemData from \"./game-data/mm3/handheld-items.json\";\r\nimport imbuedData from \"./game-data/mm3/imbued.json\";\r\nimport miscData from \"./game-data/mm3/misc.json\";\r\nimport modsData from \"./game-data/mm3/mods.json\";\r\nimport specialItemData from \"./game-data/mm3/special-items.json\";\r\nimport { IWeapon, IArmor, IHandheldItem, IImbue, IMiscItem, IMod, ISpecialItem } from \"./ItemTypes\";\r\n\r\n\r\nconst MM3Id: React.FC = () =>\r\n  <Identifier\r\n    game=\"3\"\r\n    weapons={weaponData as IWeapon[]}\r\n    armor={armorData as IArmor[]}\r\n    handheldItems={handheldItemData as IHandheldItem[]}\r\n    imbues={imbuedData as IImbue[]}\r\n    miscItems={miscData as IMiscItem[]}\r\n    mods={modsData as IMod[]}\r\n    specialItems={specialItemData as ISpecialItem[]}\r\n    note={(\r\n      <p><a href=\"http://shrines.rpgclassics.com/pc/mm3/\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a></p>\r\n    )}\r\n  />;\r\n\r\nexport default MM3Id;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport weaponData from \"./game-data/mm4-5/weapons.json\";\r\nimport armorData from \"./game-data/mm4-5/armor.json\";\r\nimport miscData from \"./game-data/mm4-5/misc.json\";\r\nimport modsData from \"./game-data/mm4-5/mods.json\";\r\nimport { IWeapon, IArmor, IMiscItem, IMod } from \"./ItemTypes\";\r\n\r\nconst MMXeenId: React.FC = () =>\r\n  <Identifier\r\n    game=\"4/5\"\r\n    weapons={weaponData as IWeapon[]}\r\n    armor={armorData as IArmor[]}\r\n    handheldItems={[]}\r\n    imbues={[]}\r\n    miscItems={miscData as IMiscItem[]}\r\n    mods={modsData as IMod[]}\r\n    specialItems={[]}\r\n    note={(\r\n      <p><a href=\"http://shrines.rpgclassics.com/pc/mm4_5/\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a></p>\r\n    )}\r\n  />;\r\n\r\nexport default MMXeenId;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport weaponData from \"./game-data/mm2/weapons.json\";\r\nimport armorData from \"./game-data/mm2/armor.json\";\r\nimport miscData from \"./game-data/mm2/misc.json\";\r\nimport { IWeapon, IArmor, IOtherItem } from \"./ItemTypes\";\r\n\r\nconst MM2Id: React.FC = () =>\r\n  <Identifier\r\n    game=\"2\"\r\n    weapons={weaponData as IWeapon[]}\r\n    armor={armorData as IArmor[]}\r\n    handheldItems={[]}\r\n    imbues={[]}\r\n    miscItems={[]}\r\n    otherItems={miscData as IOtherItem[]}\r\n    mods={[]}\r\n    specialItems={[]}\r\n    searchExact={true}\r\n    note={(\r\n      <p><a href=\"http://shrines.rpgclassics.com/pc/mm2/\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a></p>\r\n    )}\r\n  />;\r\n\r\nexport default MM2Id;","import React from \"react\";\r\nimport Identifier from \"./Identifier\";\r\nimport items from \"./game-data/mm1/items.json\";\r\nimport { IMM1Item } from \"./ItemTypes\";\r\n\r\nconst MM1Id: React.FC = () =>\r\n  <Identifier\r\n    game=\"1\"\r\n    weapons={[]}\r\n    armor={[]}\r\n    handheldItems={[]}\r\n    imbues={[]}\r\n    miscItems={[]}\r\n    otherItems={[]}\r\n    mods={[]}\r\n    specialItems={[]}\r\n    mm1Items={items as IMM1Item[]}\r\n    searchExact={true}\r\n    note={(\r\n      <p>\r\n        SPECIAL = EQUIP/NONE/???, can or can't be equipped, otherwise equip gives +protection or +attribute;\r\n        AMT = how much attr is increased (e.g. COLD/50 is +%) cold resist);\r\n        MAGIC = Y/N determines if it can cast magic, the number is the number of charges;\r\n        COST = gold value;\r\n        DMG = base weapon damage (e.g. club is 1-3 damage);\r\n        AC/DMG = AC if armor or extra damage. <a href=\"http://alexandria.rpgclassics.com/PC/mightandmagic/mightandmagic_3.txt\" target=\"_blank\" rel=\"noopener noreferrer\">Source</a>\r\n      </p>\r\n    )}\r\n  />;\r\n\r\nexport default MM1Id;","import React from \"react\";\r\nimport FlowLayout from \"components/layout/FlowLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport { Routes } from \"Routing\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport \"./GamePicker.scoped.scss\";\r\nimport MM3Id from \"./MM3Id\";\r\nimport MMXeenId from \"./MMXeenId\";\r\nimport MM2Id from \"./MM2Id\";\r\nimport MM1Id from \"./MM1Id\";\r\n\r\ninterface IGamePickerProps {\r\n  game: string,\r\n}\r\n\r\nconst GamePicker: React.FC<RouteComponentProps<IGamePickerProps>> = (props) => {\r\n  const game = props.match.params.game;\r\n  \r\n  if (game === \"mm1\") {\r\n    return <MM1Id />;\r\n  } else if (game === \"mm2\") {\r\n    return <MM2Id />;\r\n  } else if (game === \"mm3\") {\r\n    return <MM3Id />;\r\n  } else if (game === \"mmxeen\") {\r\n    return <MMXeenId />;\r\n  } else {\r\n    return (\r\n      <FlowLayout\r\n        header={(\r\n          <PageTitle title=\"M&amp;M Item Identifier\" />\r\n        )}\r\n      >\r\n        <div>\r\n          Choose game:\r\n          \r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mm1')}>\r\n            MM1\r\n          </Link>\r\n\r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mm2')}>\r\n            MM2\r\n          </Link>\r\n\r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mm3')}>\r\n            MM3\r\n          </Link>\r\n    \r\n          <Link to={Routes.ItemIdentifierForGame.replace(':game','mmxeen')}>\r\n            MM4/5\r\n          </Link>\r\n        </div>\r\n      </FlowLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePicker;","import React from \"react\";\r\nimport \"./Potion.scoped.scss\";\r\n\r\ninterface IPotionProps {\r\n  potion: IPotion,\r\n  recipes: IPotion[],\r\n  isTop?: boolean,\r\n}\r\n\r\nexport interface IPotion {\r\n  name: string,\r\n  recipe: string,\r\n  effect: string,\r\n  type: string,\r\n}\r\n\r\nconst Potion: React.FC<IPotionProps> = ({ potion: { name, recipe, effect }, recipes, isTop }) => {\r\n  let components = recipe.split(' + ')\r\n    .map(pot => recipes.find(r => r.name === pot)\r\n      || pot)\r\n    .map((comp, ix) => {\r\n      if (typeof comp === \"string\") {\r\n        if (comp === \"Empty Bottle\") {\r\n          return null;\r\n        }\r\n        return <span key={\"comp_\" + ix} className={`color-${comp.substr(0, 1)}`}>{comp.substr(0, 1)}</span>;\r\n      } else {\r\n        return (\r\n          <Potion\r\n            potion={comp}\r\n            recipes={recipes}\r\n            key={ix}\r\n          />\r\n        );\r\n      }\r\n    });\r\n\r\n  let renderComps: JSX.Element[] = [];\r\n\r\n  components\r\n    .forEach((comp, ix, arr) => {\r\n      if (comp === null) {\r\n        return;\r\n      }\r\n\r\n      if (ix > 0) {\r\n        renderComps.push(\r\n          <span key={\"plus_\" + ix} className=\"plus\">+</span>\r\n        );\r\n      }\r\n\r\n      renderComps.push(comp);\r\n    });\r\n\r\n  return (\r\n    <div\r\n      className={`potion ${isTop ? \"top\" : \"\"}`}\r\n    >\r\n      <span\r\n        className=\"name\"\r\n      >\r\n        {name}\r\n      </span>\r\n      <span\r\n        className=\"effect\"\r\n      >\r\n        {effect}\r\n      </span>\r\n      {renderComps}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Potion;","import React, { useState } from \"react\";\r\nimport mm6Recipes from \"./game-data/mm6.json\";\r\nimport mm7Recipes from \"./game-data/mm7.json\";\r\nimport mm8Recipes from \"./game-data/mm8.json\";\r\nimport Potion, { IPotion } from \"./Potion\";\r\nimport FlowLayout from \"components/layout/FlowLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./Alchemy.scoped.scss\";\r\n\r\nconst gameRecipes: IGameIndexable = {\r\n  \"MM6\": mm6Recipes,\r\n  \"MM7\": mm7Recipes,\r\n  \"MM8\": mm8Recipes,\r\n};\r\n\r\ninterface IGameIndexable {\r\n  [index: string]: IPotion[];\r\n};\r\n\r\nconst getSimpleComponents = (recipe: string, list: IPotion[]): JSX.Element | null => {\r\n  if (recipe.indexOf(\"Empty Bottle\") > -1) {\r\n    const color = recipe.substr(0, 1);\r\n    return <span className={`color-${color}`}>{color}</span>;\r\n  }\r\n\r\n  let chunks = recipe.split(\" + \");\r\n  let chunk0 = list.find(x => x.name === chunks[0]);\r\n  let chunk1 = list.find(x => x.name === chunks[1]);\r\n\r\n  if (!chunk0\r\n    || !chunk1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      ({getSimpleComponents(chunk0?.recipe, list)} + {getSimpleComponents(chunk1.recipe, list)})\r\n    </span>\r\n  )\r\n}\r\n\r\nconst Alchemy: React.FC = () => {\r\n  const [game, setGame] = useState(\"MM6\");\r\n  const [potionType, setPotionType] = useState(\"All\");\r\n  const [potionName, setPotionName] = useState(\"All\");\r\n  const [showSimplified, setShowSimplified] = useState(true);\r\n\r\n  const recipes = gameRecipes[game];\r\n  const potionTypes = [...new Set(recipes.map(x => x.type))];\r\n\r\n  return (\r\n    <FlowLayout\r\n      header={(\r\n        <div className=\"header\">\r\n          <PageTitle\r\n            title={`${game} Alchemy`}\r\n          />\r\n          <div className=\"row\">\r\n            <label>Game:</label>\r\n            <div className=\"buttons\">\r\n              {Object.keys(gameRecipes).map(gm => (\r\n                <button\r\n                  key={gm}\r\n                  onClick={() => {\r\n                    setGame(gm);\r\n                    setPotionType(\"All\");\r\n                    setPotionName(\"All\");\r\n                  }}\r\n                  className={gm === game ? \"primary-button\" : \"\"}\r\n                >\r\n                  {gm}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label>Potion Type:</label>\r\n            <div className=\"buttons\">\r\n              <button\r\n                onClick={() => setPotionType(\"All\")}\r\n                className={potionType === \"All\" ? \"primary-button\" : \"\"}\r\n              >\r\n                All\r\n              </button>\r\n              {potionTypes.map(pt => (\r\n                <button\r\n                  key={pt}\r\n                  onClick={() => {\r\n                    setPotionType(pt);\r\n                    setPotionName(\"All\");\r\n                  }}\r\n                  className={potionType === pt ? \"primary-button\" : \"\"}\r\n                >\r\n                  {pt}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label>Potion:</label>\r\n            <div className=\"buttons\">\r\n              <button\r\n                onClick={() => setPotionName(\"All\")}\r\n                className={potionName === \"All\" ? \"primary-button\" : \"\"}\r\n              >\r\n                All\r\n              </button>\r\n              {recipes\r\n                .filter(pot => pot.type === potionType)\r\n                .map(pt => (\r\n                  <button\r\n                    key={pt.name}\r\n                    onClick={() => setPotionName(pt.name)}\r\n                    className={potionName === pt.name ? \"primary-button\" : \"\"}\r\n                  >\r\n                    {pt.name}\r\n                  </button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Simplified Notation\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"simple\"\r\n                checked={showSimplified}\r\n                onChange={(e) => setShowSimplified(e.target.checked)}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      )}\r\n    >\r\n      {recipes\r\n        .filter(potion => (potionType === \"All\"\r\n          || potion.type === potionType)\r\n          && (potionName === \"All\"\r\n            || potionName === potion.name))\r\n        .map(potion => showSimplified\r\n          ? (\r\n            <div\r\n              className=\"simple-potion\"\r\n              key={potion.name}\r\n            >\r\n              <label>{potion.name}</label>\r\n              {getSimpleComponents(potion.recipe, recipes)}\r\n              <span\r\n                className=\"effect\"\r\n              >\r\n                {potion.effect}\r\n              </span>\r\n            </div>\r\n          )\r\n          : (\r\n            <Potion\r\n              potion={potion}\r\n              recipes={recipes}\r\n              key={potion.name}\r\n              isTop={true}\r\n            />\r\n          )\r\n        )\r\n      }\r\n    </FlowLayout>\r\n  );\r\n};\r\n\r\nexport default Alchemy;","import React from 'react';\r\nimport \"./MenuItem.scoped.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\ninterface IMenuItemProps {\r\n  label: string,\r\n  icon: string,\r\n  url: string,\r\n  onClick?(): void,\r\n  isCollapsed: boolean,\r\n  matchExact?: boolean,\r\n}\r\n\r\nconst MenuItem: React.FC<IMenuItemProps> = ({ label, icon, url, onClick, isCollapsed, matchExact }) => {\r\n  let match = useRouteMatch({\r\n    path: url,\r\n    exact: matchExact === undefined || matchExact,\r\n  });\r\n\r\n  if (url) {\r\n    return (\r\n      <Link\r\n        to={url}\r\n        className={`menu-item ${match ? \"active\" : \"\"} ${isCollapsed ? \"collapsed\" : \"\"}`}\r\n        title={label}\r\n      >\r\n        <img src={icon} alt={label} /> <label>{label}</label>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        className={`menu-item ${isCollapsed ? \"collapsed\" : \"\"}`}\r\n        onClick={onClick}\r\n      >\r\n        {icon &&\r\n          <img src={icon} alt={label} />\r\n        }\r\n        <label>{label}</label>\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, { useState } from 'react';\r\nimport \"./MainMenu.scoped.scss\";\r\nimport backupIcon from \"media/icons/backup.svg\";\r\nimport magnifyingGlassIcon from \"media/icons/magnifying-glass.svg\";\r\nimport hamburgerMenuIcon from \"media/icons/hamburger-menu.svg\";\r\nimport teacherIcon from \"media/icons/teacher.svg\";\r\nimport mapIcon from \"media/icons/treasure-map.svg\";\r\nimport helpIcon from \"media/icons/help.svg\";\r\nimport potionIcon from \"media/icons/potion-ball.svg\";\r\nimport MenuItem from './MenuItem';\r\nimport { Routes } from '../../Routing';\r\n\r\nconst MainMenu: React.FC = () => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n\r\n  return (\r\n    <div className=\"main-menu\">\r\n      <MenuItem\r\n        label=\"Menu\"\r\n        icon={hamburgerMenuIcon}\r\n        url=\"\"\r\n        isCollapsed={isCollapsed}\r\n        onClick={() => setIsCollapsed(!isCollapsed)}\r\n      />\r\n      <MenuItem\r\n        label=\"Random Party\"\r\n        icon={backupIcon}\r\n        url={Routes.RandomParty}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Skill Trainers\"\r\n        icon={teacherIcon}\r\n        url={Routes.SkillTrainers}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Maps\"\r\n        icon={mapIcon}\r\n        url={Routes.Maps}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Item Identifier\"\r\n        icon={magnifyingGlassIcon}\r\n        url={Routes.ItemIdentifier}\r\n        isCollapsed={isCollapsed}\r\n        matchExact={false}\r\n      />\r\n      <MenuItem\r\n        label=\"Alchemy\"\r\n        icon={potionIcon}\r\n        url={Routes.Alchemy}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"About\"\r\n        icon={helpIcon}\r\n        url={Routes.Root}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport \"./Layout.scoped.scss\";\r\nimport MainMenu from './MainMenu';\r\n\r\nconst Layout: React.FC = ({ children }) =>\r\n  <div className=\"site\">\r\n    <MainMenu />\r\n    <div className=\"page-content\">\r\n      {children}\r\n    </div>\r\n  </div>;\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Routing from './Routing';\r\nimport Layout from './components/layout/Layout';\r\nimport {\r\n  BrowserRouter\r\n} from \"react-router-dom\";\r\n\r\nconst App: React.FC = () =>\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Layout>\r\n      <Routing />\r\n    </Layout>\r\n  </BrowserRouter>;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}