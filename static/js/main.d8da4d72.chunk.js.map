{"version":3,"sources":["media/mm7/barrows.png","media/icons/backup.svg","media/icons/magnifying-glass.svg","media/icons/hamburger-menu.svg","media/icons/teacher.svg","media/icons/treasure-map.svg","media/icons/help.svg","components/mm3-items/MM3Data.ts","components/layout/PageTitle.tsx","components/layout/PageLayout.tsx","components/parties/RandomParty.tsx","NotFound.tsx","components/About.tsx","Routing.tsx","components/mm3-items/MM3Items.tsx","components/mm-trainers/Trainers.tsx","components/maps/Maps.tsx","components/layout/MenuItem.tsx","components/layout/MainMenu.tsx","components/layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MM3ItemTypes","PageTitle","title","useEffect","document","className","PageLayout","children","header","footer","MMGames","availableClasses","partySizes","RandomParty","useState","game","partyMembers","state","setState","map","key","onClick","classes","partySize","i","push","Math","floor","random","length","generateParty","mem","ix","NotFound","About","Routes","weapons","weaponData","armor","armorData","handheldItems","handheldItemData","imbues","imbuedData","miscItems","miscData","mods","modsData","specialItems","specialItemData","MM3Items","searchTerm","setSearchTerm","items","setItems","searchBoxRef","useRef","current","focus","setSpecialItem","item","appendItem","name","purpose","location","findItem","search","special","find","x","toUpperCase","Special","weapon","indexOf","Weapon","armorItem","Armor","handheldItem","Handheld","miscItem","Misc","findAllMods","filter","property","findAllImbues","suffix","setWeapon","dmgBonus","forEach","mod","damage","toHit","toHitString","toString","allOthers","getOthersString","spells","getCastsString","setOther","totalAC","acBonus","ac","classesString","other","join","spell","onSubmit","e","preventDefault","trim","term","result","type","replace","select","doSearch","placeholder","value","onChange","target","ref","split","line","games","skillLevels","Trainers","setGame","category","setCategory","skill","setSkill","trainers","skillTrainers","mm6","mm7","mm8","categories","Set","t","sort","a","b","skills","filteredTrainers","aLvl","level","bLvl","gm","changeGame","cat","sk","trainer","Maps","src","mm7BarrowMap","alt","Routing","path","exact","component","MM3ItemIdentifier","SkillTrainers","Root","MenuItem","label","icon","url","isCollapsed","match","useRouteMatch","to","MainMenu","setIsCollapsed","hamburgerMenuIcon","backupIcon","teacherIcon","mapIcon","magnifyingGlassIcon","helpIcon","Layout","App","basename","process","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d8da4d72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/barrows.ae4696d4.png\";","module.exports = __webpack_public_path__ + \"static/media/backup.668d563a.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.ab6f39ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger-menu.6a56a4aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/teacher.7ef056f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/treasure-map.75c4582a.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.d72eb3c2.svg\";","import weaponData from \"./weapons.json\";\r\nimport armorData from \"./armor.json\";\r\nimport handheldItemData from \"./handheld-items.json\";\r\nimport imbuedData from \"./imbued.json\";\r\nimport miscData from \"./misc.json\";\r\nimport modsData from \"./mods.json\";\r\nimport specialItemData from \"./special-items.json\";\r\n\r\nexport interface IMM3Weapon {\r\n  name: string;\r\n  classes: string;\r\n  hands: string;\r\n  damage: string;\r\n}\r\n\r\nexport interface IMM3Armor {\r\n  name: string;\r\n  classes: string;\r\n  acBonus: number;\r\n}\r\n\r\nexport interface IMM3HandheldItem {\r\n  name: string;\r\n  classes: string;\r\n  acBonus: number;\r\n}\r\n\r\nexport interface IMM3Imbue {\r\n  suffix: string;\r\n  spell: string;\r\n}\r\n\r\nexport interface IMM3MiscItem {\r\n  name: string;\r\n  type: string;\r\n  acBonus: number;\r\n}\r\n\r\nexport interface IMM3Mod {\r\n  property: string;\r\n  toHit: string | number;\r\n  damage: string | number;\r\n  ac: string | number;\r\n  other: string;\r\n}\r\n\r\nexport interface IMM3SpecialItem {\r\n  name: string;\r\n  purpose: string;\r\n  location: string;\r\n}\r\n\r\nexport type IMM3Item =\r\n  IMM3Weapon\r\n  | IMM3Armor\r\n  | IMM3HandheldItem\r\n  | IMM3MiscItem\r\n  | IMM3SpecialItem;\r\n\r\nexport enum MM3ItemTypes {\r\n  Weapon,\r\n  Armor,\r\n  Handheld,\r\n  Misc,\r\n  Special,\r\n}\r\n\r\nconst weapons = weaponData as IMM3Weapon[];\r\nconst armor = armorData as IMM3Armor[];\r\nconst handheldItems = handheldItemData as IMM3HandheldItem[];\r\nconst imbues = imbuedData as IMM3Imbue[];\r\nconst miscItems = miscData as IMM3MiscItem[];\r\nconst mods = modsData as IMM3Mod[];\r\nconst specialItems = specialItemData as IMM3SpecialItem[];\r\n\r\nexport {\r\n  weapons,\r\n  armor,\r\n  handheldItems,\r\n  imbues,\r\n  miscItems,\r\n  mods,\r\n  specialItems,\r\n};","import React, { useEffect } from 'react';\r\n\r\ninterface IPageTitleProps {\r\n  title: string,\r\n}\r\n\r\nconst PageTitle: React.FC<IPageTitleProps> = ({ title }) => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  return (\r\n    <h2 className=\"page-title\">\r\n      {title}\r\n    </h2>\r\n  )\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport \"./PageLayout.scoped.scss\";\r\n\r\ninterface IPageLayoutProps {\r\n  header?: JSX.Element;\r\n  footer?: JSX.Element;\r\n}\r\n\r\nconst PageLayout: React.FC<IPageLayoutProps> = ({ children, header, footer }) =>\r\n  <div className=\"page-layout\">\r\n    {header &&\r\n      <div className=\"page-header\">\r\n        {header}\r\n      </div>\r\n    }\r\n    <div className=\"page-body\">\r\n      {children}\r\n    </div>\r\n    {footer &&\r\n      <div className=\"page-footer\">\r\n        {footer}\r\n      </div>\r\n    }\r\n  </div>;\r\n\r\nexport default PageLayout;\r\n","import React, { useState } from \"react\";\r\nimport PageTitle from \"../layout/PageTitle\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\n\r\nconst MMGames = [\r\n  \"MM6\",\r\n  \"MM7\",\r\n];\r\n\r\ninterface IAvailableClasses {\r\n  [index: string]: string[];\r\n};\r\n\r\nconst availableClasses: IAvailableClasses = {\r\n  \"MM3\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Robber\",\r\n    \"Ninja\",\r\n    \"Barbarian\",\r\n    \"Druid\",\r\n    \"Ranger\"\r\n  ],\r\n  \"MM6\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Druid\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n  ],\r\n  \"MM7\": [\r\n    \"Knight\",\r\n    \"Paladin\",\r\n    \"Archer\",\r\n    \"Druid\",\r\n    \"Cleric\",\r\n    \"Sorcerer\",\r\n    \"Monk\",\r\n    \"Ranger\",\r\n    \"Thief\",\r\n  ],\r\n};\r\n\r\ninterface IPartySizes {\r\n  [index: string]: number;\r\n};\r\n\r\nconst partySizes: IPartySizes = {\r\n  \"MM6\": 4,\r\n  \"MM7\": 4,\r\n}\r\n\r\ninterface IRandomPartyState {\r\n  game: string,\r\n  partyMembers: string[],\r\n}\r\n\r\nconst RandomParty: React.FC = () => {\r\n  const [state, setState] = useState<IRandomPartyState>({\r\n    game: \"\",\r\n    partyMembers: [],\r\n  });\r\n\r\n  const generateParty = (game: string) => {\r\n    const classes = availableClasses[game];\r\n    const partySize = partySizes[game];\r\n\r\n    let partyMembers: string[] = [];\r\n\r\n    for (let i = 0; i < partySize; i++) {\r\n      partyMembers.push(classes[Math.floor(Math.random() * classes.length)]);\r\n    }\r\n\r\n    setState({\r\n      game,\r\n      partyMembers,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title=\"Random Party\" />\r\n          <div>\r\n            <p>\r\n              Click a button to generate a random party for that game.\r\n            </p>\r\n            {MMGames.map(game => (\r\n              <button\r\n                key={game}\r\n                onClick={() => generateParty(game)}\r\n                className=\"primary-button\"\r\n              >\r\n                {game}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    >\r\n      {state.partyMembers.length > 0 &&\r\n        <div>\r\n          <h4>Random {state.game} Party</h4>\r\n          <ol>\r\n            {state.partyMembers.map((mem, ix) =>\r\n              <li\r\n                key={ix}\r\n              >\r\n                {mem}\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      }\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default RandomParty;","import React from 'react';\r\nimport PageTitle from 'components/layout/PageTitle';\r\n\r\nconst NotFound: React.FC = () =>\r\n  <>\r\n    <PageTitle title=\"Whoopsie\" />\r\n    <p>Doesn't look like there's anything here.</p>\r\n  </>;\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport PageTitle from \"./layout/PageTitle\";\r\n\r\nconst About: React.FC = () =>\r\n  <>\r\n    <PageTitle title=\"Might and Magic Tools\" />\r\n    <p>\r\n      Welcome to Might and Magic Tools. Here you'll\r\n      find some tools and info to help you play the games.\r\n    </p>\r\n    <p>\r\n      Have an idea or a request?\r\n      Email me: enigmabrand &lt;at&gt; gmail.\r\n    </p>\r\n  </>;\r\n\r\nexport default About;","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport RandomParty from \"./components/parties/RandomParty\";\r\nimport NotFound from \"./NotFound\";\r\nimport About from \"./components/About\";\r\nimport MM3Items from \"components/mm3-items/MM3Items\";\r\nimport Trainers from \"components/mm-trainers/Trainers\";\r\nimport Maps from \"components/maps/Maps\";\r\n\r\nexport enum Routes {\r\n  Root = \"/\",\r\n  RandomParty = \"/random-party\",\r\n  MM3ItemIdentifier = \"/item-identifier/mm3\",\r\n  SkillTrainers = \"/skill-trainers\",\r\n  Maps = \"/maps\",\r\n}\r\n\r\nconst Routing: React.FC = () =>\r\n  <Switch>\r\n    <Route path={Routes.RandomParty} exact component={RandomParty} />\r\n    <Route path={Routes.MM3ItemIdentifier} exact component={MM3Items} />\r\n    <Route path={Routes.SkillTrainers} exact component={Trainers} />\r\n    <Route path={Routes.Maps} exact component={Maps} />\r\n    <Route path={Routes.Root} exact component={About} />\r\n    <Route>\r\n      <NotFound />\r\n    </Route>\r\n  </Switch>;\r\n\r\nexport default Routing;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./MM3Items.scoped.scss\";\r\nimport {\r\n  weapons,\r\n  armor,\r\n  handheldItems,\r\n  miscItems,\r\n  mods,\r\n  specialItems,\r\n  IMM3SpecialItem,\r\n  IMM3Weapon,\r\n  IMM3Armor,\r\n  IMM3HandheldItem,\r\n  IMM3MiscItem,\r\n  IMM3Item,\r\n  MM3ItemTypes,\r\n  IMM3Mod,\r\n  IMM3Imbue,\r\n  imbues,\r\n} from \"./MM3Data\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\n\r\nconst MM3Items: React.FC = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [items, setItems] = useState<string[]>([]);\r\n  const searchBoxRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    searchBoxRef.current?.focus();\r\n  }, [searchBoxRef]);\r\n\r\n  const doSearch = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!searchTerm.trim()) {\r\n      return;\r\n    }\r\n\r\n    let term = searchTerm.toUpperCase();\r\n\r\n    const result = findItem(term);\r\n\r\n    if (!result) {\r\n      searchBoxRef.current?.select();\r\n      return;\r\n    }\r\n\r\n    const [item, type] = result;\r\n\r\n    if (type === MM3ItemTypes.Special) {\r\n      setSpecialItem(item as IMM3SpecialItem);\r\n      return;\r\n    } else {\r\n      term = term.replace(item.name.toUpperCase(), \"\");\r\n    }\r\n\r\n    const mods = findAllMods(term);\r\n    const imbues = findAllImbues(term);\r\n\r\n    if (type === MM3ItemTypes.Weapon) {\r\n      setWeapon(item as IMM3Weapon, mods, imbues);\r\n    } else if (type === MM3ItemTypes.Armor) {\r\n      setOther(item as IMM3Armor, mods, imbues);\r\n    } else if (type === MM3ItemTypes.Handheld) {\r\n      setOther(item as IMM3HandheldItem, mods, imbues);\r\n    } else if (type === MM3ItemTypes.Misc) {\r\n      setOther(item as IMM3MiscItem, mods, imbues);\r\n    }\r\n\r\n    searchBoxRef.current?.select();\r\n  }\r\n\r\n  const setSpecialItem = (item: IMM3SpecialItem) => {\r\n    appendItem(`${item.name}\r\n    Purpose: ${item.purpose}\r\n    Location: ${item.location}`);\r\n  }\r\n\r\n  const findItem = (search: string): [IMM3Item, MM3ItemTypes] | undefined => {\r\n    let special = specialItems.find(x => x.name.toUpperCase() === search);\r\n    if (special) {\r\n      return [special, MM3ItemTypes.Special];\r\n    }\r\n    let weapon = weapons.find(x => search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (weapon) {\r\n      return [weapon, MM3ItemTypes.Weapon];\r\n    }\r\n    let armorItem = armor.find(x => search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (armorItem) {\r\n      return [armorItem, MM3ItemTypes.Armor];\r\n    }\r\n    let handheldItem = handheldItems.find(x => search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (handheldItem) {\r\n      return [handheldItem, MM3ItemTypes.Handheld];\r\n    }\r\n    let miscItem = miscItems.find(x => search.indexOf(x.name.toUpperCase()) > -1);\r\n    if (miscItem) {\r\n      return [miscItem, MM3ItemTypes.Misc];\r\n    }\r\n  }\r\n\r\n  const findAllMods = (search: string): IMM3Mod[] => {\r\n    return mods.filter(x => search.indexOf(x.property.toUpperCase()) > -1);\r\n  }\r\n\r\n  const findAllImbues = (search: string): IMM3Imbue[] => {\r\n    return imbues.filter(x => search.indexOf(x.suffix.toUpperCase()) > -1);\r\n  }\r\n\r\n  const appendItem = (item: string) => {\r\n    setItems([\r\n      item,\r\n      ...items,\r\n    ]);\r\n  }\r\n\r\n  const setWeapon = (weapon: IMM3Weapon, mods: IMM3Mod[], imbues: IMM3Imbue[]) => {\r\n    let dmgBonus = \"\";\r\n    mods.forEach(mod => {\r\n      if (!mod.damage\r\n        || mod.damage === \"none\") {\r\n        return;\r\n      }\r\n\r\n      if (typeof mod.damage === \"number\"\r\n        && mod.damage as number > 0) {\r\n        dmgBonus += ` +${mod.damage}`;\r\n      } else {\r\n        dmgBonus += ` ${mod.damage}`;\r\n      }\r\n    });\r\n\r\n    let toHit = 0;\r\n    mods.forEach(mod => {\r\n      if (mod.toHit !== \"none\") {\r\n        toHit += mod.toHit as number;\r\n      }\r\n    });\r\n\r\n    let toHitString = \"\";\r\n\r\n    if (toHit < 0) {\r\n      toHitString = toHit.toString();\r\n    } else if (toHit > 0) {\r\n      toHitString = `+${toHit}`;\r\n    }\r\n\r\n    if (toHitString) {\r\n      toHitString = ` [${toHitString} to hit]`;\r\n    }\r\n\r\n    let allOthers = getOthersString(mods);\r\n    let spells = getCastsString(imbues);\r\n\r\n    appendItem(`${searchTerm} (${weapon.damage}${dmgBonus})${toHitString} {${weapon.classes}}`\r\n      + (allOthers\r\n        ? `\\n${allOthers}`\r\n        : \"\")\r\n      + (spells\r\n        ? `\\n${spells}`\r\n        : \"\"));\r\n  }\r\n\r\n  const setOther = (item: IMM3Armor | IMM3HandheldItem | IMM3MiscItem, mods: IMM3Mod[], imbues: IMM3Imbue[]) => {\r\n    let totalAC = item.acBonus;\r\n    mods\r\n      .filter(mod => typeof mod.ac === \"number\")\r\n      .forEach(mod => totalAC += mod.ac as number);\r\n\r\n    let allOthers = getOthersString(mods);\r\n    let spells = getCastsString(imbues);\r\n    let classesString = (item as any).classes\r\n      ? ` {${(item as any).classes}}`\r\n      : \"\";\r\n\r\n    appendItem(`${searchTerm} (AC: ${totalAC})${classesString}`\r\n      + (allOthers\r\n        ? `\\n${allOthers}`\r\n        : \"\")\r\n      + (spells\r\n        ? `\\n${spells}`\r\n        : \"\"));\r\n  }\r\n\r\n  const getOthersString = (mods: IMM3Mod[]) => {\r\n    return mods\r\n      .filter(mod => !!mod.other\r\n        && mod.other !== \"none\")\r\n      .map(mod => mod.other)\r\n      .join(', ');\r\n  }\r\n\r\n  const getCastsString = (imbues: IMM3Imbue[]) => {\r\n    let spells = imbues\r\n      .map(x => x.spell)\r\n      .join(', ');\r\n\r\n    if (!!spells) {\r\n      spells = `Casts: ${spells}`;\r\n    }\r\n\r\n    return spells;\r\n  }\r\n\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title=\"M&amp;M 3 Item Identifier\" />\r\n          <form\r\n            onSubmit={(e) => doSearch(e)}\r\n          >\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by full item name...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                ref={searchBoxRef}\r\n              />\r\n              <button\r\n                className=\"primary-button\"\r\n                type=\"submit\"\r\n              >\r\n                Id\r\n          </button>\r\n            </div>\r\n            <div>\r\n              <span>K = Knight</span>\r\n              <span>P = Paladin</span>\r\n              <span>A = Archer</span>\r\n              <span>C = Cleric</span>\r\n              <span>S = Sorcerer</span>\r\n              <span>T = Robber</span>\r\n              <span>N = Ninja</span>\r\n              <span>B = Barbarian</span>\r\n              <span>D = Druid</span>\r\n              <span>R = Ranger</span>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n    >\r\n      {items &&\r\n        items.map((item, ix) =>\r\n          <p\r\n            key={ix}\r\n            className=\"item-description\"\r\n          >\r\n            {item.split('\\n').map((line, ix) =>\r\n              <span key={ix}>{line}</span>\r\n            )}\r\n          </p>\r\n        )\r\n      }\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default MM3Items;","import React, { useState } from \"react\";\r\nimport skillTrainers from \"./skill-trainers.json\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport \"./Trainers.scoped.scss\";\r\n\r\ninterface ISkillTrainer {\r\n  category: string;\r\n  level: string;\r\n  skill: string;\r\n  name: string;\r\n  location: string;\r\n}\r\n\r\nconst games = [\"MM6\", \"MM7\", \"MM8\"];\r\nconst skillLevels = [\"Normal\", \"Expert\", \"Master\", \"Grandmaster\"];\r\n\r\nconst Trainers: React.FC = () => {\r\n  const [game, setGame] = useState(\"MM6\");\r\n  const [category, setCategory] = useState(\"Weapon\");\r\n  const [skill, setSkill] = useState(\"all\");\r\n\r\n  let trainers: ISkillTrainer[] = [];\r\n\r\n  if (game === \"MM6\") {\r\n    trainers = skillTrainers.mm6;\r\n  } else if (game === \"MM7\") {\r\n    trainers = skillTrainers.mm7;\r\n  } else if (game === \"MM8\") {\r\n    trainers = skillTrainers.mm8;\r\n  }\r\n\r\n  const categories = [...new Set(trainers\r\n    .map(t => t.category))]\r\n    .sort((a, b) => a < b ? -1 : 1);\r\n\r\n  const skills = [...new Set(trainers\r\n    .filter(t => t.category === category)\r\n    .map(t => t.skill))]\r\n    .sort((a, b) => a < b ? -1 : 1);\r\n\r\n  const filteredTrainers = trainers\r\n    .filter(t => t.category === category\r\n      && (skill === \"all\"\r\n        || t.skill === skill))\r\n    .sort((a, b) => {\r\n      if (a.skill < b.skill) {\r\n        return -1;\r\n      } else if (a.skill > b.skill) {\r\n        return 1;\r\n      }\r\n\r\n      const aLvl = skillLevels.indexOf(a.level);\r\n      const bLvl = skillLevels.indexOf(b.level);\r\n\r\n      if (aLvl < bLvl) {\r\n        return -1;\r\n      } else if (aLvl > bLvl) {\r\n        return 1;\r\n      }\r\n\r\n      if (a.location < b.location) {\r\n        return -1;\r\n      } else if (a.location > b.location) {\r\n        return 1;\r\n      }\r\n\r\n      return a.name < b.name\r\n        ? -1\r\n        : 1;\r\n    });\r\n\r\n    const changeGame = (game: string) => {\r\n      setGame(game);\r\n      setSkill(\"all\");\r\n    }\r\n\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <div className=\"controls\">\r\n          <PageTitle title={`${game} Skill Trainers`} />\r\n          <div>\r\n            <label>\r\n              Game:\r\n            </label>\r\n            {games.map(gm => (\r\n              <button\r\n                className={`primary-button ${gm === game ? \"active\" : \"\"}`}\r\n                key={gm}\r\n                onClick={() => changeGame(gm)}\r\n              >\r\n                {gm}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Categories:\r\n            </label>\r\n            {categories.map(cat => (\r\n              <button\r\n                className={`primary-button ${cat === category ? \"active\" : \"\"}`}\r\n                key={cat}\r\n                onClick={() => setCategory(cat)}\r\n              >\r\n                {cat}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Skill:\r\n            </label>\r\n            <button\r\n              className={`primary-button ${\"all\" === skill ? \"active\" : \"\"}`}\r\n              onClick={() => setSkill(\"all\")}\r\n            >\r\n              All\r\n            </button>\r\n            {skills.map(sk => (\r\n              <button\r\n                className={`primary-button ${sk === skill ? \"active\" : \"\"}`}\r\n                key={sk}\r\n                onClick={() => setSkill(sk)}\r\n              >\r\n                {sk}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    >\r\n      {filteredTrainers.map(trainer => (\r\n        <p\r\n          className=\"trainer\"\r\n        >\r\n          <label>\r\n            {trainer.skill} {trainer.level}\r\n          </label>\r\n          {trainer.location}, {trainer.name}\r\n        </p>\r\n      ))}\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default Trainers;","import React from \"react\";\r\nimport PageLayout from \"components/layout/PageLayout\";\r\nimport PageTitle from \"components/layout/PageTitle\";\r\nimport mm7BarrowMap from \"media/mm7/barrows.png\"\r\nimport \"./Maps.scoped.scss\";\r\n\r\nconst Maps: React.FC = () => {\r\n  return (\r\n    <PageLayout\r\n      header={(\r\n        <>\r\n          <PageTitle title=\"Maps\" />\r\n        </>\r\n      )}\r\n    >\r\n      <h2>MM7 Barrows Map</h2>\r\n      <img\r\n        src={mm7BarrowMap}\r\n        alt=\"MM7 Barrows Map\"\r\n      />\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default Maps;","import React from 'react';\r\nimport \"./MenuItem.scoped.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\ninterface IMenuItemProps {\r\n  label: string,\r\n  icon: string,\r\n  url: string,\r\n  onClick?(): void,\r\n  isCollapsed: boolean,\r\n}\r\n\r\nconst MenuItem: React.FC<IMenuItemProps> = ({ label, icon, url, onClick, isCollapsed }) => {\r\n  let match = useRouteMatch(url);\r\n\r\n  if (url) {\r\n    return (\r\n      <Link\r\n        to={url}\r\n        className={`menu-item ${match ? \"active\" : \"\"} ${isCollapsed ? \"collapsed\" : \"\"}`}\r\n        title={label}\r\n      >\r\n        <img src={icon} alt={label} /> <label>{label}</label>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        className={`menu-item ${isCollapsed ? \"collapsed\" : \"\"}`}\r\n        onClick={onClick}\r\n      >\r\n        {icon &&\r\n          <img src={icon} alt={label} />\r\n        }\r\n        <label>{label}</label>\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, { useState } from 'react';\r\nimport \"./MainMenu.scoped.scss\";\r\nimport backupIcon from \"media/icons/backup.svg\";\r\nimport magnifyingGlassIcon from \"media/icons/magnifying-glass.svg\";\r\nimport hamburgerMenuIcon from \"media/icons/hamburger-menu.svg\";\r\nimport teacherIcon from \"media/icons/teacher.svg\";\r\nimport mapIcon from \"media/icons/treasure-map.svg\";\r\nimport helpIcon from \"media/icons/help.svg\";\r\nimport MenuItem from './MenuItem';\r\nimport { Routes } from '../../Routing';\r\n\r\nconst MainMenu: React.FC = () => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n\r\n  return (\r\n    <div className=\"main-menu\">\r\n      <MenuItem\r\n        label=\"Menu\"\r\n        icon={hamburgerMenuIcon}\r\n        url=\"\"\r\n        isCollapsed={isCollapsed}\r\n        onClick={() => setIsCollapsed(!isCollapsed)}\r\n      />\r\n      <MenuItem\r\n        label=\"Random Party\"\r\n        icon={backupIcon}\r\n        url={Routes.RandomParty}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Skill Trainers\"\r\n        icon={teacherIcon}\r\n        url={Routes.SkillTrainers}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"Maps\"\r\n        icon={mapIcon}\r\n        url={Routes.Maps}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"M&amp;M 3 Items\"\r\n        icon={magnifyingGlassIcon}\r\n        url={Routes.MM3ItemIdentifier}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n      <MenuItem\r\n        label=\"About\"\r\n        icon={helpIcon}\r\n        url={Routes.Root}\r\n        isCollapsed={isCollapsed}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport \"./Layout.scoped.scss\";\r\nimport MainMenu from './MainMenu';\r\n\r\nconst Layout: React.FC = ({ children }) =>\r\n  <div className=\"site\">\r\n    <MainMenu />\r\n    <div className=\"page-content\">\r\n      {children}\r\n    </div>\r\n  </div>;\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport Routing from './Routing';\nimport Layout from './components/layout/Layout';\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\n\nconst App: React.FC = () =>\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Layout>\n      <Routing />\n    </Layout>\n  </BrowserRouter>;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}